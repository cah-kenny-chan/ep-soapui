<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="fed5cf9e-944e-4bf9-93a7-9ea62eda3d42" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DetermineAskDaysSupplyOnHand" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="fed5cf9e-944e-4bf9-93a7-9ea62eda3d42fileName">DetermineAskDaysSupplyOnHand</con:setting>
  </con:settings>
  <con:testStep type="restrequest" name="JSON Request" id="699b5213-cf64-4178-be88-53533a9b6479">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0784",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "B186"
                }
            ]
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5012"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="AskDaysSupplyOnHand-SingleLineItem" id="fd5caee3-fce1-411f-8c1c-87a410c454d7">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineAskDaysSupplyonHand/DetermineAskDaysSupplyonHand-SingleLineItem-Input.xls"
def outputfile = projectDir + "/DetermineAskDaysSupplyonHand/DetermineAskDaysSupplyonHand-SingleLineItem-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"hcpcsCode",sheet1);
addCell(2,0,"id",sheet1);
addCell(3,0,"planCode",sheet1);
addCell(4,0,"askDaysSupplyOnHand",sheet1);
addCell(5,0,"PASS/FAIL",sheet1);
addCell(6,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()
                        
                                 //Input for Line Item ID                               
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode  
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents()                                                                                     
                                                                                     
                                 // Input for Plan
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(3,i).getContents()
                                 // Input for ID
                                requestTemplet.content.lineItems[0].plans[0].id = sh.getCell(4,i).getContents()

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID from response json                                 
                        addCell(0,i,json.lineItems[0].lineItemID,sheet1);                                   
                          // get hcpcsCode from response json                                   
                        addCell(1,i,json.lineItems[0].hcpcsCode,sheet1);  
                         // get hcpcsCode from response json                                   
                        addCell(2,i,json.lineItems[0].plans[0].id,sheet1); 
                         // get hcpcsCode from response json                                   
                        addCell(3,i,json.lineItems[0].plans[0].planCode,sheet1);  
                          // get askDaysSupplyOnHand from response json                           
                        addCell(4,i,json.lineItems[0].askDaysSupplyOnHand.toString(),sheet1);  
                                                    
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(5,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"lineItems[0].lineItemID","lineItemID")

                          hcpcsCode = sh.getCell(6,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,hcpcsCode,"lineItems[0].hcpcsCode","hcpcsCode")

                       id = sh.getCell(7,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,id,"lineItems[0].plans[0].id","id")

                       planCode = sh.getCell(8,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planCode,"lineItems[0].plans[0].planCode","planCode")

                         askDaysSupplyOnHand = sh.getCell(9,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,askDaysSupplyOnHand,"lineItems[0].askDaysSupplyOnHand","askDaysSupplyOnHand")
                                                  
                     
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(5,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(6,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(5,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="AskDaysSupplyOnHand-MultiLineItem" id="4c8aaffa-d114-4c41-ac73-90b53d2be2ab">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineAskDaysSupplyonHand/DetermineAskDaysSupplyonHand-MultiLineItem-Input.xls"
def outputfile = projectDir + "/DetermineAskDaysSupplyonHand/DetermineAskDaysSupplyonHand-MultiLineItem-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"hcpcsCode",sheet1);
addCell(2,0,"id",sheet1);
addCell(3,0,"planCode",sheet1);
addCell(4,0,"askDaysSupplyOnHand",sheet1);
addCell(5,0,"lineItemID",sheet1);
addCell(6,0,"hcpcsCode",sheet1);
addCell(7,0,"id",sheet1);
addCell(8,0,"planCode",sheet1);
addCell(9,0,"askDaysSupplyOnHand",sheet1);
addCell(10,0,"PASS/FAIL",sheet1);
addCell(11,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                        //Inputs for LineItem1
                                 //Input for LineItemID                               
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode  
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents()                                                                                     
                                                                                     
                                 // Input for Plan
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(3,i).getContents()
                                 // Input for ID
                                requestTemplet.content.lineItems[0].plans[0].id = sh.getCell(4,i).getContents()

                        //Inputs for LineItem2
                                //Input for LineItemID                               
                                requestTemplet.content.lineItems[1].lineItemID = sh.getCell(5,i).getContents()
                                 //Input for hcpcsCode  
                                requestTemplet.content.lineItems[1].hcpcsCode = sh.getCell(6,i).getContents()                                                                                     
                                                                                     
                                 // Input for Plan
                                requestTemplet.content.lineItems[1].plans[0].planCode = sh.getCell(7,i).getContents()
                                 // Input for ID
                                requestTemplet.content.lineItems[1].plans[0].id = sh.getCell(8,i).getContents()

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                      //get response for LineItem1            
                           // get lineItemID from response json                                 
                        addCell(0,i,json.lineItems[0].lineItemID,sheet1);                                   
                          // get hcpcsCode from response json                                   
                        addCell(1,i,json.lineItems[0].hcpcsCode,sheet1);  
                         // get hcpcsCode from response json                                   
                        addCell(2,i,json.lineItems[0].plans[0].id,sheet1); 
                         // get hcpcsCode from response json                                   
                        addCell(3,i,json.lineItems[0].plans[0].planCode,sheet1);  
                          // get askDaysSupplyOnHand from response json                           
                        addCell(4,i,json.lineItems[0].askDaysSupplyOnHand.toString(),sheet1);
                        
                      //get response for LineItem2  
                          // get lineItemID from response json 
                        addCell(5,i,json.lineItems[1].lineItemID,sheet1);                                   
                          // get hcpcsCode from response json                                   
                        addCell(6,i,json.lineItems[1].hcpcsCode,sheet1);  
                         // get hcpcsCode from response json                                   
                        addCell(7,i,json.lineItems[1].plans[0].id,sheet1); 
                         // get hcpcsCode from response json                                   
                        addCell(8,i,json.lineItems[1].plans[0].planCode,sheet1);  
                          // get askDaysSupplyOnHand from response json                           
                        addCell(9,i,json.lineItems[1].askDaysSupplyOnHand.toString(),sheet1);  
                                                    
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(9,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"lineItems[0].lineItemID","lineItemID")

                          hcpcsCode = sh.getCell(10,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,hcpcsCode,"lineItems[0].hcpcsCode","hcpcsCode")

                       id = sh.getCell(11,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,id,"lineItems[0].plans[0].id","id")

                       planCode = sh.getCell(12,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planCode,"lineItems[0].plans[0].planCode","planCode")

                         askDaysSupplyOnHand = sh.getCell(13,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,askDaysSupplyOnHand,"lineItems[0].askDaysSupplyOnHand","askDaysSupplyOnHand")
                                                  
                        lineItemID1 = sh.getCell(14,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID1,"lineItems[1].lineItemID","lineItemID")

                          hcpcsCode1 = sh.getCell(15,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,hcpcsCode1,"lineItems[1].hcpcsCode","hcpcsCode")

                         id1 = sh.getCell(16,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,id1,"lineItems[1].plans[0].id","id")

                        planCode1 = sh.getCell(17,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planCode1,"lineItems[1].plans[0].planCode","planCode")

                         askDaysSupplyOnHand1 = sh.getCell(18,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,askDaysSupplyOnHand1,"lineItems[1].askDaysSupplyOnHand","askDaysSupplyOnHand")
                                                  
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(10,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(11,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(10,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61347" id="d8fb6ab2-2f78-4abc-8512-ace05a243611">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61347" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5001"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9748bb13-1757-40c9-9441-b568a6e3a83f" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="71100643-14d0-45d4-bffc-01e5cf05f98d" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8db21813-9f32-4006-be29-98423ad2b74e" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content/>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b6ba937e-c1dc-49f0-b76e-c371640d89df" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c7987ab1-b0db-4462-b69c-d739ba31a49b" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="011b28da-c695-45eb-96ab-7a4d93cfcff6" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61348" id="32ffc3f0-8d00-4034-9428-ba3a289f53b3">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61348" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0784",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5002"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b349121f-1f3c-4b3b-b183-5be5f987bee0" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0a881b48-a900-4c5a-a742-2049f78a11e6" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c118598a-c968-4bf9-a5d7-edc42a02e02c" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0784</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cfcacec7-4e13-4840-8d0f-2554d4f7a1a0" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cc578fbc-9df3-4f7d-a5a9-30ca223330f8" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0f5fb39d-ef16-4022-a301-d5eb7d1f64d4" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61349" id="c7eb504c-a0fb-4cfd-85ad-5bfcb9b6f6d6">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61349" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0785",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5003"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="97eeadbb-41a8-455d-a07a-7796c937171b" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f1e0078c-ccab-4e18-bf66-3df34d8fc329" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7668c9c9-5990-47df-b8e6-61f10a73a298" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0785</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="83a19089-4dfa-4af1-87ce-0ead340f2e76" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="24c63339-65b5-41d0-aa0a-3bcd7da7371c" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5003</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bbd9c4bb-3c15-49b5-aee0-54b98c8d29bf" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61350" id="4c68496e-e756-498e-98df-a72d8bd18c6b">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61350" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0785",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "A162"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="75274738-f907-4187-9204-3aecc86cb491" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9eeec5ca-07ed-43a0-b666-94a521c91bb8" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9e64f7f5-74d2-4f2b-92ec-be139664ee5a" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0785</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c296b9ca-ae4a-43fc-b4e0-e4cd32e9b891" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="282fb869-171c-4d88-be36-194ba64e9d30" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>A162</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5d9ef0ce-1b82-47df-af85-85698522cf00" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61351" id="93f1967c-e20c-4ffa-95d8-c432f22cb0d5">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61351" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5013"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="fefea554-8b72-48e1-8bd2-3e68103074fc" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6cfebdb9-836e-4480-a9bb-645a40b78b52" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="192f684d-bd3d-4948-8eed-7aa7fda4c0f6" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content/>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f12379e1-8ccd-49e3-99c7-b10139225d3c" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="619eb30d-ba5e-4264-8ade-c6e861bf08d9" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5013</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="53288d89-184d-4d00-90df-b3448ad6b57a" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61352" id="1eb15526-adf0-4add-bc66-9c26984de3a1">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61352" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0603",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5014"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="bdaad5d5-0381-4840-bbbe-9082a23b023e" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2453f92c-f6e3-4f97-8fd2-71562e575925" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="447ce573-1d09-4347-9435-fc608299be2e" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0603</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8ddb4f1b-f2b7-4c8a-8322-19a61cb83934" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="566c06ba-bc12-4614-a9a2-b70dd2b5c2e6" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5014</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="354e7400-3a25-48d7-a341-ab7f99c9cc78" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61353" id="d0f7ca87-647c-4077-8a16-8d67da317881">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61353" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "2486"
                }
            ]
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5004"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="441ab57d-0d4c-4dcb-8548-97ea421b0c7f" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3256c5da-72fc-4398-a901-391ada5c95a9" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="59dee73c-6648-43bd-9516-8730848a6e28" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content/>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="78b85ff6-446c-41a5-9855-0270acf0b3b2" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4f77f34f-a1b1-4aa2-8c38-eae3466e2a14" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>2486</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7a91ed9d-08bb-4c66-ae35-4849252850de" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="223dc932-7844-46d5-b0ad-eae4cc3e7cb3" name="lineItemID">
          <con:configuration>
            <path>lineItems[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e5477810-cd54-4a37-88ca-9336f7e3c89e" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[1].hcpcsCode</path>
            <content/>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8b77a0cb-97ee-4cd2-93aa-8aae00ccba54" name="id">
          <con:configuration>
            <path>lineItems[1].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d96f3967-8d4d-4c59-ae0b-2134b248efb9" name="planCode">
          <con:configuration>
            <path>lineItems[1].plans[0].planCode</path>
            <content>5004</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1ae37785-d57a-4f37-b145-f02c8a3cc64e" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[1].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61354" id="2f792035-34ed-4297-88ba-b5d8afb9cb60">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61354" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "null",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "null"
                }
            ]
        },
        {
            "hcpcsCode": "E1785",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "2486"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9667c550-5c8e-4bcd-bba6-b412e290fe4f" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="336caca2-7ecb-44a7-9111-28e3e7cf2ce9" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3ff0e7a0-4d3b-4a81-9918-ac71505496c6" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d7ad167b-3a52-4050-b2b8-57a767938078" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="faff19f8-a8cc-4589-b048-cd965d42a35e" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3a4d199e-2079-4d60-8eff-677df43aa935" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a21129d9-398b-4943-b2ed-b65ec9da0a87" name="lineItemID">
          <con:configuration>
            <path>lineItems[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="24e72e71-9bd1-4b5b-8b26-692a370f2577" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[1].hcpcsCode</path>
            <content>E1785</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e7d6c05b-2a90-4e55-8b60-b8af438661ef" name="id">
          <con:configuration>
            <path>lineItems[1].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="89213c73-545f-41cf-a02e-211df91d9093" name="planCode">
          <con:configuration>
            <path>lineItems[1].plans[0].planCode</path>
            <content>2486</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8f832729-7434-4515-ae8d-1a17007a9db5" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[1].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61355" id="0e7437f9-c033-450b-a953-6ebeed8e2b7f">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61355" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0784",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5011"
                }
            ]
        },
        {
            "hcpcsCode": "E0603",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5012"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="5ae70d38-4612-4b58-97e3-9c8879814273" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6b9e6449-f559-4a61-94e1-7c89f86a627d" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d8b047c9-b76e-48f1-9482-c14b8eef2430" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0784</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e8b5da59-5d89-4b39-a991-ac342af85439" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="029156f5-5912-4e4d-84c0-162cc0188f5e" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5011</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="12b91e5c-9db9-4452-b0eb-3d2a4fa737fc" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="464d1941-13c3-4ce7-9234-71264cf2ea25" name="lineItemID">
          <con:configuration>
            <path>lineItems[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="17efce47-4831-41cc-ad43-a6f21ec723de" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[1].hcpcsCode</path>
            <content>E0603</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b924bcb4-34e2-4a90-ac6f-e64221547b8f" name="id">
          <con:configuration>
            <path>lineItems[1].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="060c3729-84ec-4bd3-859b-2da69f376a23" name="planCode">
          <con:configuration>
            <path>lineItems[1].plans[0].planCode</path>
            <content>5012</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8352de81-4866-4375-88ac-089a41854eef" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[1].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61356" id="bd52ddf2-8eb0-46aa-9f75-85582b491490">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61356" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A4236",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5011"
                }
            ]
        },
        {
            "hcpcsCode": "A4236",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5014"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="3eaad88f-ca9e-4461-9095-10191ef26782" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a34c4f4a-fc10-472b-bc28-750e87cfe027" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8b4b2a31-607c-40b2-b832-0cc5842bc6e3" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>A4236</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4d262b03-6ac0-476c-a517-03ff8da12dc4" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="561e0ebe-621c-48b1-afde-7897da0f107b" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>5011</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f74c7532-659d-4a9a-9938-3957bd3e3790" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="14f7c758-9382-4e9d-ace3-100b1028d997" name="lineItemID">
          <con:configuration>
            <path>lineItems[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e0a8c792-6883-4dac-88b0-6294af2abfbd" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[1].hcpcsCode</path>
            <content>A4236</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="97c68bc9-0588-47be-9c43-fe3f5aa6aca4" name="id">
          <con:configuration>
            <path>lineItems[1].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="192b6198-07cf-4947-9f7c-5bd135dacbfd" name="planCode">
          <con:configuration>
            <path>lineItems[1].plans[0].planCode</path>
            <content>5014</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="36fa18b5-71d9-4b90-95bf-840af3bad91a" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[1].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-61357" id="dd06ea44-ea5a-4539-b7b3-fd81a243fb02">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL" methodName="DetermineAskDaysSupplyOnHand" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-61357" id="27d9ee80-9d44-4ba0-83e7-6761f397aa0d" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0784",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "B186"
                }
            ]
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f",
                    "planCode": "5012"
                }
            ]
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineAskDaysSupplyOnHand/DetermineAskDaysSupplyOnHand/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="ae68cc7f-5f10-4798-ad0a-89a3254139bf" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8db1a5d7-309f-4062-b09a-5b797dd6b717" name="lineItemID">
          <con:configuration>
            <path>lineItems[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6bda2fcb-90e3-4e4d-a860-5398b038e30a" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[0].hcpcsCode</path>
            <content>E0784</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="73825db8-f52f-4f8e-b4f3-657510d4e261" name="id">
          <con:configuration>
            <path>lineItems[0].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ed980224-4c69-4435-b5da-f4eb32fe589f" name="planCode">
          <con:configuration>
            <path>lineItems[0].plans[0].planCode</path>
            <content>B186</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4961de37-bc3e-4c96-a156-cfa5e81da3e2" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[0].askDaysSupplyOnHand</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="424ea3dc-1f70-4556-ae7a-5f6388166e5c" name="lineItemID">
          <con:configuration>
            <path>lineItems[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="faeb4356-bd5f-46f5-9c88-cf4c3a63a7d5" name="hcpcsCode">
          <con:configuration>
            <path>lineItems[1].hcpcsCode</path>
            <content/>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aa470215-9349-451b-b3a1-ef2932488f5f" name="id">
          <con:configuration>
            <path>lineItems[1].plans[0].id</path>
            <content>7e78cc3f-ffc0-632f-e053-2c97f4a1aa6f</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fe7badce-59be-4c7e-a91c-586a0d98dbd6" name="planCode">
          <con:configuration>
            <path>lineItems[1].plans[0].planCode</path>
            <content>5012</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d4ad6819-c1e4-4dae-b328-88c225fc347f" name="askDaysSupplyOnHand">
          <con:configuration>
            <path>lineItems[1].askDaysSupplyOnHand</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
