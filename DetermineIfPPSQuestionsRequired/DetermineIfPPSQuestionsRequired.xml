<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="de5f1ab7-c122-41b5-804c-4f91840df8bf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DetermineIfPPSQuestionsRequired" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="de5f1ab7-c122-41b5-804c-4f91840df8bffileName">DetermineIfPPSQuestionsRequired</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="DetermineIfPPSQuestionsRequired_SinglePayer" id="ae27bd2e-ff7c-475a-9233-511d0889b88a">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired-SinglePayer-Input.xls"
def outputfile = projectDir + "/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired-SinglePayer-Output.xls"


//Creating workbook for reading value from Excel Sheet 
Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();

Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file 
addCell(0,0,"PPSQuestionsRequired",sheet1);
addCell(1,0,"PASS/FAIL",sheet1);
addCell(2,0,"FAILED DUE TO",sheet1);


//new testStepName
def newTestStep=null
try {    
                def req = jreq.getContents()
              
                //Assigning request value dynamically
                //request
                def slurper = new JsonSlurper().parseText(req);
                def requestTemplete = new JsonBuilder(slurper);
                for (i=2;i&lt;rc;i++){
               
                                           // Input for TestCaseName
                              Cell varTestCaseName = sh.getCell(0,i)
                              def TestCaseName = varTestCaseName.getContents()

                                           //Input for Order Source
                              requestTemplete.content.order.source =  sh.getCell(1,i).getContents()                                                                                                         

                                           //Input for Plan Name
                              requestTemplete.content.plans[0].planCode =  sh.getCell(2,i).getContents()
                                          
    
                                //Assign json request to variable
                                def jsonReqAsString = requestTemplete.toPrettyString()    
                                def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                                restRequest.setPropertyValue('Request',jsonReqAsString);                                               

                                //teststep cloned: Start
                                def getTestCase = testRunner.testCase;
                                def testst = testRunner.testCase.getTestStepByName("JSON Request");                  
                                newTestStep = TestCaseName
                                cleanUp(newTestStep)
                                getTestCase.cloneStep(restRequest,newTestStep)
                               
                         //teststep cloned: End
                                //Executing the testcase
                                testRunner.runTestStepByName(newTestStep)
 
                                //retrive response
                                def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                           
  
                                //new JsonSlurper to parse and get the response in Json format
                                def slurper1 = new JsonSlurper()
                                def json = slurper1.parseText(ResponseMessage)

                               // extract the value of required elements from the json response
                             // get ppsQuestionsRequired from response json   
                             addCell(0,i,json.ppsQuestionsRequired.toString(),sheet1);
                              
                         
                          //dynamic asserstion :Start
                                def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                       addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
                            
                            //get the expected values
                                 ppsQuestionsRequired = sh.getCell(3,i).getContents().toString() 
                                addAssertionJsonPathMatch(testStepForAssertion,ppsQuestionsRequired,"ppsQuestionsRequired","ppsQuestionsRequired")
 
   
                                //dynamic asserstion :End
                                assertionResult = testStepForAssertion.getAssertionStatus()
                                if(assertionResult.toString().equals("FAILED")){
                                   addCell(1,i,"Fail",sheet1);
              for( assertion in testStepForAssertion.assertionList ){
                                                for( e in assertion.errors ){
                                                    addCell(2,i,e.message,sheet1);
                                                }  
                                   }
                                }
                                else{
                                  addCell(1,i,"PASS",sheet1); 
                                }
}
wb1.write();
                log.info "TestCase Execution Completed successfull"
                }              
               
             
catch(Exception e)
{
                log.info(e)                           
}
finally
{
     //close workbook
     wb.close();
     wb1.close();       
     
 }
  //Method code 
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) { 
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(false)  
}
   //Method code 
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) { 
         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
                    StatusCodeAssertionxpath.name = assertionName
                    StatusCodeAssertionxpath.codes=200
}
//method to delete
def cleanUp(String requestName){
                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)
                if (testStep!=null){
                                                testCase.removeTestStep(testStep)
                }
                
                //remove the teststep::End
}
//method to add Cell to sheet1
def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){
                Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);                
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineIfPPSQuestionsRequired_MultiPayer" id="43e6c801-02d8-493b-9762-5597ffa63825">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired-MultiPayer-Input.xls"
def outputfile = projectDir + "/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired-MultiPayer-Output.xls"


//Creating workbook for reading value from Excel Sheet 
Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();

Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file 
addCell(0,0,"PPSQuestionsRequired",sheet1);
addCell(1,0,"PASS/FAIL",sheet1);
addCell(2,0,"FAILED DUE TO",sheet1);


//new testStepName
def newTestStep=null
try {    
                def req = jreq.getContents()
              
                //Assigning request value dynamically
                //request
                def slurper = new JsonSlurper().parseText(req);
                def requestTemplete = new JsonBuilder(slurper);
                for (i=2;i&lt;rc;i++){
               
                                             // Input for TestCaseName
                              Cell varTestCaseName = sh.getCell(0,i)
                              def TestCaseName = varTestCaseName.getContents()

                                             //Input for Order Source
                              requestTemplete.content.order.source =  sh.getCell(1,i).getContents()                            
          

                                              //Input for Plan1 Name
                              requestTemplete.content.plans[0].planCode =  sh.getCell(2,i).getContents()                            
                                                                    

                                              //Input for Plan2 Name
                              requestTemplete.content.plans[1].planCode =  sh.getCell(3,i).getContents()
                              
            
    
                                //Assign json request to variable
                                def jsonReqAsString = requestTemplete.toPrettyString()    
                                def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                                restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                                def getTestCase = testRunner.testCase;
                                def testst = testRunner.testCase.getTestStepByName("JSON Request");                  
                                newTestStep = TestCaseName
                                cleanUp(newTestStep)
                                getTestCase.cloneStep(restRequest,newTestStep)
                               
                         //teststep cloned: End
                                //Executing the testcase
                                testRunner.runTestStepByName(newTestStep)
 
                                //retrive response                                
                                def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                                  
                                //new JsonSlurper to parse and get the response in Json format
                                def slurper1 = new JsonSlurper()
                                def json = slurper1.parseText(ResponseMessage)

                               // extract the value of required elements from the json response
                             // get ppsQuestionsRequired from response json   
                              //addCell(0,i,requestTemplete.content.order.source.toString(),sheet1);
                              //addCell(1,i,requestTemplete.content.payers[0].planName.toString(),sheet1);
                             // addCell(2,i,requestTemplete.content.payers[1].planName.toString(),sheet1);
                              addCell(0,i,json.ppsQuestionsRequired.toString(),sheet1);
                         
                          //dynamic asserstion :Start
                                def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                       addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
                               
                               //get the expected values                             
                                ppsQuestionsRequired = sh.getCell(4,i).getContents().toString() 
                                addAssertionJsonPathMatch(testStepForAssertion,ppsQuestionsRequired,"ppsQuestionsRequired","ppsQuestionsRequired")
 
   
                                //dynamic asserstion :End
                                assertionResult = testStepForAssertion.getAssertionStatus()
                                if(assertionResult.toString().equals("FAILED")){
                                   addCell(1,i,"Fail",sheet1);
              for( assertion in testStepForAssertion.assertionList ){
                                                for( e in assertion.errors ){
                                                    addCell(2,i,e.message,sheet1);
                                                }  
                                   }
                                }
                                else{
                                  addCell(1,i,"PASS",sheet1); 
                                }
}
wb1.write();
                log.info "TestCase Execution Completed successfull"
                }              
               
             
catch(Exception e)
{
                log.info(e)                           
}
finally
{
     //close workbook
     wb.close();
     wb1.close();       
     
}
  //Method code 
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) { 
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(false)  
}
   //Method code 
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) { 
         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
                    StatusCodeAssertionxpath.name = assertionName
                    StatusCodeAssertionxpath.codes=200
}
//method to delete
def cleanUp(String requestName){
                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)
                if (testStep!=null){
                                                testCase.removeTestStep(testStep)
                }
                
                //remove the teststep::End
}
//method to add Cell to sheet1
def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){
                Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);                
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="JSON Request" id="7da48a49-a496-4355-921a-3a29445076d8">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "ELECTRONIC"
    },
    "plans": [
        {
            "planCode": "A013"
        },
        {
            "planCode": "B644"
        }
    ]
}</con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41922" id="c92b611b-e349-4b08-88af-59b3b560b9b0">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41922" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "INTERNAL"
    },
    "plans": [
        {
            "planCode": "5001"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="80bd28fd-ccd2-44d1-88cc-4f36d2c8f9c9" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c4134aa1-4fc9-4bcf-8f8c-0c695a19b0bd" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41923" id="6806ec51-5490-4171-96f4-bf37baa7307b">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41923" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "INTERNAL"
    },
    "plans": [
        {
            "planCode": "5002"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="fdb7f12e-6ed3-4546-a6de-0541a6186df5" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5fe0bdbe-7467-4ad2-b178-16d4df13e95b" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41924" id="988c0b7f-b234-44a6-8a8a-311d92393fb3">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41924" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "WEB"
    },
    "plans": [
        {
            "planCode": "5003"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="6e30fb41-56ae-4a0d-9601-a60f704070bd" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b5effd47-81bc-4ae9-b965-479d62ce6448" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41925" id="e37aab65-fb0c-4c03-b634-56b2305f28d9">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41925" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "INTERNAL"
    },
    "plans": [
        {
            "planCode": "5007"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="ead1d3be-c523-41e6-abfb-a777fc103984" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d243ade4-a4cc-43c4-9991-0c0a2aa40a56" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41926" id="7d0b3826-00a7-4188-8da9-5eee37a0353c">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41926" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "WEB"
    },
    "plans": [
        {
            "planCode": "NULL"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b56b485d-db3d-4d99-a8f2-9c27d19a5a3a" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="85240915-a592-42ed-bf02-ef8037e08f06" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41927" id="f70e119d-4931-4adf-a447-6cdb8f233068">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41927" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "INTERNAL"
    },
    "plans": [
        {
            "planCode": "5007"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="7a10836d-1528-46be-aab0-27910a1e8f46" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2e477fbb-a875-4a5d-b482-c6cd15a06868" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41928" id="ebfe2b57-ce07-4fc7-bfcb-bc9c11b2a388">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41928" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "TR234AD"
    },
    "plans": [
        {
            "planCode": "5001"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="5eb6c991-3224-4932-8ec0-006544f2836e" name="Valid HTTP Status Codes_8">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="51630d75-ca82-4744-86a1-4893a37967fe" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41929" id="6b205377-8a42-44ea-ae5e-be3d871d6963">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41929" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "NULL"
    },
    "plans": [
        {
            "planCode": "5001"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="6282d298-ccdc-4b68-9efe-bcbdc7ece7a7" name="Valid HTTP Status Codes_9">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8964491d-045b-4d34-85de-bc901894bfe9" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41930" id="8ff978dd-ef55-4044-a861-449c31485ba4">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41930" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "ELECTRONIC"
    },
    "plans": [
        {
            "planCode": "5003"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="4e65fe75-701f-43ab-952e-433cd3dd21f7" name="Valid HTTP Status Codes_10">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0888644a-59f1-4937-82f9-c7981a031a2c" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41931" id="e821346b-2761-4592-8ad7-5dd89ede654e">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41931" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "ELECTRONIC"
    },
    "plans": [
        {
            "planCode": "5007"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="fa9ba5e8-6fa7-4c8a-a408-cf8dc6581791" name="Valid HTTP Status Codes_11">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6bc990f9-52a2-48f4-91d7-27d4eacf4e82" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41932" id="7772370c-9398-4d39-b8b8-45021ee3f839">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41932" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "INTERNAL"
    },
    "plans": [
        {
            "planCode": "5001"
        },
        {
            "planCode": "5002"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="bb5964c1-c781-469e-9281-889a45f3f0c3" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1c327977-8d24-4046-aa7b-2c278a88b506" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41933" id="9f972a75-ac58-42cd-b3ae-34f0fa7fca51">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41933" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "WEB"
    },
    "plans": [
        {
            "planCode": "5004"
        },
        {
            "planCode": "A013"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="ee64cb12-0275-4e32-ac9e-18458f489854" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a706e0a4-ca9c-41a3-9f5c-bf25e3a358b2" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41934" id="15665370-e044-40b2-b7da-c8b954fcab4f">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41934" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "WEB"
    },
    "plans": [
        {
            "planCode": "A013"
        },
        {
            "planCode": "5001"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="f9a2acab-6302-41fd-8492-ef716a0320ab" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="727f935b-8b5e-40f0-991d-ac7a2dc52d0d" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41935" id="f204f7d2-6a49-461b-a856-bbeb07503c55">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41935" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "WEB123"
    },
    "plans": [
        {
            "planCode": "A013"
        },
        {
            "planCode": "A013"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b55ac0f8-8ca3-4fab-91b9-616f3b294a41" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8f38f8ff-bd41-436b-be4f-3f032a98740f" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41936" id="73ceb8d5-37c8-4831-974d-7ecbb2b9a739">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41936" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "NULL"
    },
    "plans": [
        {
            "planCode": "5003"
        },
        {
            "planCode": "A013"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1f29e1d1-bcd6-4a99-830f-059eb152809c" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="86de16ec-de3f-416b-8922-d509c06de7c6" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41937" id="7f513598-c897-4626-b15a-9f513097b7eb">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41937" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "ELECTRONIC"
    },
    "plans": [
        {
            "planCode": "5002"
        },
        {
            "planCode": "5003"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1e87d16e-7fd0-448a-8f99-6a539895ca9a" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f2a4deaa-d857-4537-bba0-a9abf37f61c6" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-41938" id="56dea490-4b67-4235-8660-fa6561ff39e5">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL" methodName="DetermineIfPPSQuestionsRequired" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-41938" id="a9c70a88-bd3b-4e9b-a088-5490f94bf8fd" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": null,
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "order": {
        "source": "ELECTRONIC"
    },
    "plans": [
        {
            "planCode": "A013"
        },
        {
            "planCode": "B644"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineIfPPSQuestionsRequired/DetermineIfPPSQuestionsRequired/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b7d2c544-5a1f-4f73-8576-c6358f44cc14" name="Valid HTTP Status Codes_8">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="48e59786-f182-44b9-9113-225a022ef99c" name="ppsQuestionsRequired">
          <con:configuration>
            <path>ppsQuestionsRequired</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
