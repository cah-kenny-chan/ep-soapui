<?xml version="1.0" encoding="UTF-8" ?>
  
<project xmlns:jacoco="antlib:org.jacoco.ant" name="EPSTSoapUITests" basedir=".">

	<!--Set the path variables  -->
	<property environment="env" />
	<echo>BUILD_Region: ${env.Region}</echo>
	<property file="${basedir}/build_${env.Region}.properties" />
	<property file="${basedir}/build-config.properties" />
	<property file="${basedir}/build.properties" />
	<property name="projectdir" location="${basedir}/.." />
	<property name="credentials.file" location="${basedir}/credentials_${env.Region}.txt" />
	<property name="ds.home" location="${ds.home}" />
	<property name="server.IP" value="${server.IP}" />
	<property name="portnumber" value="${portnumber}" />
	<property name="soapUI.dir" value="${soapUI.dir}" />
	<property name="soapUI.report.dir" location="${soapUI.report.dir}" />
	<!--This endpoint is injected via ant call, i.e. 'ant functionalTest -D-->
	<property name="endpoint" value="${endpoint}" />
	<property name="soapUI.project" location="${basedir}/CARES_ODM-soapui-project.xml" />

	<tstamp>
	<format property="timeStampWithDay.pattern" pattern="yyyy_MM_dd"/>
	<format property="timeStampWithMins.pattern" pattern="yyyy_MM_dd_HH_mm"/>
	</tstamp>
	
	<path id="soapUI.classpath">
		<fileset dir="${soapUI.dir}">
			<include name="bin/**/*.jar" />
			<include name="lib/*.jar" />
		</fileset>
	</path>

	<!--Set the ANT classpath  ${ds.home}/shared/tools/ant  D:\ThirdPartyLib\apache-ant-1.9.7\lib-->
	<path id="ant.classpath">
		<fileset dir="${basedir}/ant">
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<!-- Macro definition for Running the SoupUI test -->
	<macrodef name="soapUIrunner">
		<sequential>
			<java classname="com.eviware.soapui.tools.SoapUITestCaseRunner" resultproperty="errorCode" fork="true" dir="${soapUI.report.dir}">

				<arg line="-j -M -r -a -f${soapUI.report.dir}/xml" />
				<!-- Endpoint is injected and overrides any existing endpoint -->
				<arg line="-e${endpoint}" />
				<arg value="${soapUI.project}" />
				<classpath refid="ant.classpath" />
				<classpath refid="soapUI.classpath" />
			</java>
		</sequential>
	</macrodef>
	
	
	<target name="-soapUI.init-report">
		<delete dir="${soapUI.report.dir}" failonerror="false" />
		<mkdir dir="${soapUI.report.dir}" />
		<mkdir dir="${soapUI.report.dir}/xml" />
		<echo message="Reports will be generated in : ${soapUI.report.dir}" />
	</target>

	<!--Target to call soupUIrunner macro -->
	<target name="-run.SoapUI" depends="-soapUI.init-report">
		<echo message="*****Running soapUIrunner****** " />
		<soapUIrunner />
	</target>

	<!-- 
	/******************************************************************************************/ 
		This task genrates the SoapUI Test report.										  
		Report will be at : SoapUI\reports\soapUI
		NOTE:This report will be generated only after succesfull deployment to the Server.
	/******************************************************************************************/ 
	-->
	<target name="-SoapUIReport" depends="-run.SoapUI">
		<junitreport todir="${soapUI.report.dir}">
			<fileset dir="${soapUI.report.dir}/xml">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${soapUI.report.dir}" />
		</junitreport>
		<echo message="Report has been generated in : ${soapUI.report.dir} : ${errorCode}" />
		<antcall target="copyFunctionalReportToLatest"/> 
		<fail message="Functional failure detected, check test results.">
			<condition>
				<not>
					<equals arg1="${errorCode}" arg2="0" />
				</not>
			</condition>
		</fail>
	</target>

	<!-- 
	/******************************************************************************************/ 
			 	   				Target for functionalTest
	/******************************************************************************************/ 
	-->
	<target name="functionalTest" depends="-SoapUIReport" description="Use this task to run the SoaupUI testcase after deploy and generate report">
	</target>

	
	
     <!-- 
	 /******************************************************************************************/ 
								  Target for copying metadata log
	 /******************************************************************************************/ 
	-->
	
    <target name ="copyMetaDataLog" description="Copy metadata log to NAS(central) location">
	 <copy file="${basedir}/.metadata/.log" tofile="${sharedLocation.dir}/${timeStampWithDay.pattern}/Metadatalog/${timeStampWithMins.pattern}/odm.log" />
    </target>

     <!--
	 /******************************************************************************************/ 
					   Target for copying functional(SoapUI) report to NAS directory
	 /******************************************************************************************/ 
	 -->
	<target name ="copyFunctionalReport" description="Copy functional report to NAS(central) location">
	<copy todir="${sharedLocation.dir}/${timeStampWithDay.pattern}/functionalTest/${timeStampWithMins.pattern}/">
	<fileset dir="${basedir}/reports/soapUI"/>
	</copy>
	</target>

 
    <!--
	 /******************************************************************************************/ 
			   Target for copying functional(SoapUI) report to latest folder in NAS directory
	 /******************************************************************************************/ 
	 -->
	<target name ="copyFunctionalReportToLatest" description="Copy functional report to latest folder in NAS(central) location" depends="deleteLatestFunctionalFolder">
	<antcall target="copyFunctionalReport"/>
	<copy todir="${sharedLocation.dir}/latest/functionalTest/">
	<fileset dir="${basedir}/reports/soapUI"/>
	</copy>
	</target>

	<!--
   /******************************************************************************************/ 
			Target for deleting functional(SoapUI) folder inside latest directory
	/******************************************************************************************/ 
     -->
    <target name="deleteLatestFunctionalFolder" description="This target will delete functional folder inside latest directory">
    <delete includeemptydirs="true" failonerror="false">
    <fileset dir="${sharedLocation.dir}/latest/FunctionalTest" erroronmissingdir="false" includes="**/*"/>
    </delete>
    </target>
	
    <!-- 
	/******************************************************************************************/ 
								  Target for copying metadata log inside latest directory
	/******************************************************************************************/ 
    -->      
    <target name ="copyMetaDataLogToLatest" description="Copy metadata log to NAS(central) latest directory location">
    	<copy file="${basedir}/.metadata/.log" tofile="${sharedLocation.dir}/latest/metadatalog/odm.log" /> 
    </target>

</project>
