<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="0408758a-1263-4e37-8426-080a4e7b1945" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateConflictingDiagnosis" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="0408758a-1263-4e37-8426-080a4e7b1945fileName">ValidateConflictingDiagnosis</con:setting>
  </con:settings>
  <con:testStep type="restrequest" name="JSON Request" id="cfe9b0a7-449d-440e-ac6d-07548e74c0d4">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E17"
            },
            {
                "codeICD10": "E08.9"
            },
            {
                "codeICD10": "E11.8999"
            }
        ]
    }
}</con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="ValidateConflictingDiagnosis_TwoDiagnosisCode" id="1e735be1-eacd-44fe-95c7-663a7b42df88">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis-Input.xls"
def outputfile = projectDir + "/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis-TwoDiagnosisCode-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResult_TwoDiagnosisCode")
Sheet jsonInput = wb.getSheet("JSON_TwoDiagnosisCode")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"Jira Task ID",sheet1);
addCell(1,0,"codeICD10",sheet1);
addCell(2,0,"listOfConflictingCodes",sheet1);
addCell(3,0,"codeICD10",sheet1);
addCell(4,0,"listOfConflictingCodes",sheet1);
addCell(5,0,"hasConflictingDiagnosisCodes",sheet1);
addCell(6,0,"PASS/FAIL",sheet1);
addCell(7,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(1,i)
                        def TestCaseName = varTestCaseName.getContents()
                                               
                        
                                 //Input for codeICD10_1                              
                                requestTemplet.content.medicalDocument.diagnosis[0].codeICD10 = sh.getCell(3,i).getContents()
                                 //Input for codeICD10_2  
                                requestTemplet.content.medicalDocument.diagnosis[1].codeICD10 = sh.getCell(5,i).getContents()
                                

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                                 
                           // get from response json                     
                        addCell(0,i,varTestCaseName.getContents().toString(),sheet1);  
                     int celNumForDiagnosisCode=1;
                 for(int arrForDiagnosisCode=0; arrForDiagnosisCode&lt;json.medicalDocument.diagnosis.size(); arrForDiagnosisCode++){
                 	addCell(celNumForDiagnosisCode,i,json.medicalDocument.diagnosis[arrForDiagnosisCode].codeICD10.toString(),sheet1);
	                              celNumForDiagnosisCode = celNumForDiagnosisCode+1;
	               addCell(celNumForDiagnosisCode,i,json.medicalDocument.diagnosis[arrForDiagnosisCode].listOfConflictingCodes.toString(),sheet1);
	                             celNumForDiagnosisCode = celNumForDiagnosisCode+1;                
                     } 
                     
                        addCell(5,i,json.medicalDocument.hasConflictingDiagnosisCodes.toString(),sheet1);                                  
                                                  
                   //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                        int celForDiagnosisCodes=6;
                   		for(int arrForDiagnosisCodes=0; arrForDiagnosisCodes&lt;json.medicalDocument.diagnosis.size(); arrForDiagnosisCodes++){
                     	     
                            codeICD10 = sh.getCell(celForDiagnosisCodes,i).getContents()
	                       addAssertionJsonPathMatch(testStepForAssertion,codeICD10,"medicalDocument.diagnosis["+arrForDiagnosisCodes+"].codeICD10","codeICD10")
	                       celForDiagnosisCodes = celForDiagnosisCodes+1
	                       
	                       listOfConflictingCodes = sh.getCell(celForDiagnosisCodes,i).getContents()
	                       addAssertionJsonPathMatch(testStepForAssertion,listOfConflictingCodes,"medicalDocument.diagnosis["+arrForDiagnosisCodes+"].listOfConflictingCodes","listOfConflictingCodes")
	                       celForDiagnosisCodes = celForDiagnosisCodes+1
                     	}
                     	
                          hasConflictingDiagnosisCodes = sh.getCell(10,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,hasConflictingDiagnosisCodes,"medicalDocument.hasConflictingDiagnosisCodes","hasConflictingDiagnosisCodes")                   
                                      
             
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(6,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(7,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(6,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="ValidateConflictingDiagnosis_ThreeDiagnosisCode" id="99d193f7-4928-4b19-af44-34e19f3553be">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis-Input.xls"
def outputfile = projectDir + "/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis-ThreeDiagnosisCode-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResult_ThreeDiagnoCode")
Sheet jsonInput = wb.getSheet("JSON_ThreeDiagnoCode")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"Jira Task ID",sheet1);
addCell(1,0,"codeICD10",sheet1);
addCell(2,0,"listOfConflictingCodes",sheet1);
addCell(3,0,"codeICD10",sheet1);
addCell(4,0,"listOfConflictingCodes",sheet1);
addCell(5,0,"codeICD10",sheet1);
addCell(6,0,"listOfConflictingCodes",sheet1);
addCell(7,0,"hasConflictingDiagnosisCodes",sheet1);
addCell(8,0,"PASS/FAIL",sheet1);
addCell(9,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(1,i)
                        def TestCaseName = varTestCaseName.getContents()
                                               
                        
                                 //Input for codeICD10_1                              
                                requestTemplet.content.medicalDocument.diagnosis[0].codeICD10 = sh.getCell(3,i).getContents()
                                 //Input for codeICD10_2  
                                requestTemplet.content.medicalDocument.diagnosis[1].codeICD10 = sh.getCell(5,i).getContents()
                                //Input for codeICD10_3
                                requestTemplet.content.medicalDocument.diagnosis[2].codeICD10 = sh.getCell(7,i).getContents()                                                                                     
                                 

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                                 
                           // get from response json                     
                        addCell(0,i,varTestCaseName.getContents().toString(),sheet1);  
                     int celNumForDiagnosisCode=1;
                 for(int arrForDiagnosisCode=0; arrForDiagnosisCode&lt;json.medicalDocument.diagnosis.size(); arrForDiagnosisCode++){
                 	addCell(celNumForDiagnosisCode,i,json.medicalDocument.diagnosis[arrForDiagnosisCode].codeICD10.toString(),sheet1);
	                              celNumForDiagnosisCode = celNumForDiagnosisCode+1;
	               addCell(celNumForDiagnosisCode,i,json.medicalDocument.diagnosis[arrForDiagnosisCode].listOfConflictingCodes.toString(),sheet1);
	                             celNumForDiagnosisCode = celNumForDiagnosisCode+1;                
                     } 
                     
                        addCell(7,i,json.medicalDocument.hasConflictingDiagnosisCodes.toString(),sheet1);                                  
                                                  
                   //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                        int celForDiagnosisCodes=8;
                   		for(int arrForDiagnosisCodes=0; arrForDiagnosisCodes&lt;json.medicalDocument.diagnosis.size(); arrForDiagnosisCodes++){
                     	     
                            codeICD10 = sh.getCell(celForDiagnosisCodes,i).getContents()
	                       addAssertionJsonPathMatch(testStepForAssertion,codeICD10,"medicalDocument.diagnosis["+arrForDiagnosisCodes+"].codeICD10","codeICD10")
	                       celForDiagnosisCodes = celForDiagnosisCodes+1
	                       
	                       listOfConflictingCodes = sh.getCell(celForDiagnosisCodes,i).getContents()
	                       addAssertionJsonPathMatch(testStepForAssertion,listOfConflictingCodes,"medicalDocument.diagnosis["+arrForDiagnosisCodes+"].listOfConflictingCodes","listOfConflictingCodes")
	                       celForDiagnosisCodes = celForDiagnosisCodes+1
                     	}
                     	
                          hasConflictingDiagnosisCodes = sh.getCell(14,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,hasConflictingDiagnosisCodes,"medicalDocument.hasConflictingDiagnosisCodes","hasConflictingDiagnosisCodes")                   
                                      
             
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(8,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(9,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(8,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46146" id="9384022b-c09a-476f-bc10-c049adb91935">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46146" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E10"
            },
            {
                "codeICD10": "E11"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c82dfa76-4c6e-4158-a869-572695ce8f7c" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b0629372-dae7-4c23-84ac-e1cfdf193e9e" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E10</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ab542769-ef45-4f33-ac8c-216a40a2ac3c" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>["E11"]</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cdf1b731-3df9-4215-b8f1-db2157b7cde5" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E11</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2a71583b-8ce5-45f0-9db4-cc999576c04a" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fa9ef6ef-dd0c-4fd2-b5b7-74e217eb8c57" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46147" id="e24f0c56-1bba-4433-b024-d6cc4967deda">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46147" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E10.8999"
            },
            {
                "codeICD10": "E1"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="f1e5fa48-0ea0-42b3-b5e1-25ce908055b6" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="02adc20f-d5b0-440c-84d8-6eda2b7f9035" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E10.8999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b4fb39d8-6eb0-4cb7-a37b-c6a06fd4347c" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c8750b8b-9ba6-4ceb-8954-b8db68070480" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bf95aae4-156c-4757-b603-b4163a956c11" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="50fb5254-2e61-4b5c-9363-ae4cd1b24eb2" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46148" id="24b6d6f2-1bb4-43a0-8274-bf33a5fc739c">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46148" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E08.9"
            },
            {
                "codeICD10": "E10.8999"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="01bd2592-7584-43be-8bbb-51bd64ea622e" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="682d5074-ae1a-4ffb-8da8-e75f66daf2f9" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E08.9</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5d755f12-8aac-49bf-ad86-b574a02dc759" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="567b7ba0-a8e0-4b3a-aa0e-0e61337487d1" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E10.8999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="16110639-de2c-443f-90ce-88f476f21aaf" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="46b49b42-41c6-4b98-8bc5-dfe19176d844" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46149" id="0b27042e-57bf-4ebb-bcae-98807bf57615">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46149" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E11"
            },
            {
                "codeICD10": "E11.02"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="5d4f73e5-960f-4dac-832b-f6cb91c20bd3" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="53a4b695-cfc2-4612-b6fb-44640758d4d6" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E11</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="23de78de-59a6-4523-9c35-614c5ba867fe" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c3df7bd0-ecfb-4663-ae02-83fd0e5a3f7e" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E11.02</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2cb701b0-32f0-43f3-981c-ad1d4c1ff28a" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="127ebc6e-dac2-4ba8-a59b-d07d4502ace9" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46150" id="3e69e8cc-fec6-467d-a001-37df54b10cc0">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46150" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E11.8999"
            },
            {
                "codeICD10": "E10.9"
            },
            {
                "codeICD10": "E11.9999"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="50fbf3e6-67c7-41f7-bdcf-33f5c350fbc9" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="96e3925d-f123-401f-8120-e2d44c350a93" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E11.8999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="379d8b6c-660b-4131-bcd7-0c3d30112817" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ebd03b29-1a1a-4d62-a36b-2f5de7503d7d" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E10.9</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aaa2ed01-18d7-4b7c-aaca-4b47c40ff478" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>["E11.8999","E11.9999"]</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aca0acc1-c2cf-4367-8aa9-64647f7b4213" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].codeICD10</path>
            <content>E11.9999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7e24cead-b755-4add-a14f-74cbb22a139e" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="35a4b7b3-7969-43b5-b9a4-f20b873caa3b" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46151" id="25998b1b-b210-4045-8ca7-a06cef25ca3e">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46151" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E11"
            },
            {
                "codeICD10": "E09.01"
            },
            {
                "codeICD10": "E08.9"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="920bf070-fdbc-414e-9794-3d091c498b53" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="141124ec-0ad3-47eb-853e-ce34083cfe95" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E11</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="52cfc30f-4aeb-4ffb-90ce-7454bae393ab" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f13b3fe2-9dc3-42ad-8aca-63a5c5386514" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E09.01</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1854cdf2-10a0-4eb3-ba3c-15b9d2b467f4" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="956d60f0-e439-4b90-8277-c90207ba8981" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].codeICD10</path>
            <content>E08.9</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7e118ed6-fa07-4e95-9176-bf5e068082ff" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d5ad8a75-4d98-4502-976f-96d13f8a4fba" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46152" id="dd4d08e9-783e-439e-99e9-9484161af88c">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46152" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E09.9"
            },
            {
                "codeICD10": "E08.8999"
            },
            {
                "codeICD10": "E11.9999"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c61a262a-04a9-44a1-b46c-5b007be09d1e" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b46ec03f-83b1-4441-83e2-a3e790f48af0" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E09.9</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4ab8b115-ba6b-4268-ac6c-cd115c6eabec" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6516fea3-9f52-424f-b5df-dd752369d1a4" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E08.8999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="00399f2b-b371-4805-868e-341ea8bc116d" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1cb46ca8-f3d9-4c0a-8213-ceb89e718e4e" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].codeICD10</path>
            <content>E11.9999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a2e61520-95f5-4083-8701-b7c1c922a4ab" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cecd476d-92de-4588-8b3a-ca287f94daf7" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46153" id="e176512c-7818-48c7-bbfb-7c7a2f42eeea">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46153" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E17"
            },
            {
                "codeICD10": "E2"
            },
            {
                "codeICD10": "E11"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="8aa266eb-89db-4ff6-99f1-94df453bf66f" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="178b1ad1-105d-4a95-83ca-91b3c0645710" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E17</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="25dfbebd-5e0a-45be-9ba0-0e5d6e5c15aa" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="eebf37fa-4b63-4f4f-a717-4f2ee8d6a9ac" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="31df5abc-a4e2-4a3f-a364-9156ced08cae" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="74f4bec9-e137-4f36-a98b-008d17a63652" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].codeICD10</path>
            <content>E11</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="455b5c2e-6e80-428d-ad3b-8e9eaad968d8" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1add9ed7-7c76-46aa-95b6-9994a9a6abaa" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-46154" id="90912b94-7819-4fae-a279-b10fd7574367">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL" methodName="ValidateConflictingDiagnosis" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-46154" id="e376382c-32ea-46ab-bf28-c59d3a429a35" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ValidateConflictingDiagnosis/ValidateConflictingDiagnosis",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "medicalDocument": {
        "diagnosis": [
            {
                "codeICD10": "E17"
            },
            {
                "codeICD10": "E08.9"
            },
            {
                "codeICD10": "E11.8999"
            }
        ]
    }
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/ValidateConflictingDiagnosis/ValidateConflictingDiagnosis/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c362dcf2-a839-4618-ba3f-8e4e5d11c57a" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f9d0e8f9-b280-4fbe-8869-3eee18bcc801" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].codeICD10</path>
            <content>E17</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d06dce3c-0195-4831-a073-c6f2c81d6c76" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[0].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a4915e44-5eb3-494c-ad2c-268877c27411" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].codeICD10</path>
            <content>E08.9</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2c4aea08-5236-4c20-b151-915af74fdc33" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[1].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7f5a56ca-a861-487c-b951-bad7bd1bb10c" name="codeICD10">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].codeICD10</path>
            <content>E11.8999</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8f744cd7-e53e-466b-84ce-f15163d4c01d" name="listOfConflictingCodes">
          <con:configuration>
            <path>medicalDocument.diagnosis[2].listOfConflictingCodes</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0efd7347-5b2e-40af-a71f-03f212fc3e9e" name="hasConflictingDiagnosisCodes">
          <con:configuration>
            <path>medicalDocument.hasConflictingDiagnosisCodes</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
