<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="d4b52cc2-8f8b-4a06-84ae-21cbf6138200" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DetermineLevelOfInsuranceVerification" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="d4b52cc2-8f8b-4a06-84ae-21cbf6138200fileName">DetermineLevelOfInsuranceVerification</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="DetermineLevelOfInsuranceVerification_SingleLineItem" id="efdffbdc-1935-4945-a923-b08b810de212">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-SingleLineItem-Input.xls"
def outputfile = projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-SingleLineItem-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"verificationLevel",sheet1);
addCell(3,0,"PASS/FAIL",sheet1);
addCell(4,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()
                        
                                 //Input for Line Item ID                               
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for productCategory  
                                requestTemplet.content.lineItems[0].productCategory = sh.getCell(2,i).getContents() 
                                //Input for productSubCategory1
                                
                                requestTemplet.content.lineItems[0].productSubCategory1 = sh.getCell(3,i).getContents() 
                                //Input for productSubCategory2
                                
                                requestTemplet.content.lineItems[0].productSubCategory2 = sh.getCell(4,i).getContents() 
                                //Input for productSubCategory3
                                
                                requestTemplet.content.lineItems[0].productSubCategory3 = sh.getCell(5,i).getContents() 
                                //Input for productSubCategory4
                                
                                requestTemplet.content.lineItems[0].productSubCategory4 = sh.getCell(6,i).getContents()
                                 //Input for hcpcsCode
                                 
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(7,i).getContents()                                                              
                                 // Input for Plan
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(8,i).getContents()
                                  // Input for ID
                                requestTemplet.content.lineItems[0].plans[0].id =sh.getCell(9,i).getContents()

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request_singleLineItem');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request_singleLineItem");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID from response json                                 
                        addCell(0,i,json.insuranceVerifications[0].lineItemID,sheet1);                                   
                          // get PayerID from response json                                   
                        addCell(1,i,json.insuranceVerifications[0].planID,sheet1);   
                          // get contactMethod from response json                           
                        addCell(2,i,json.insuranceVerifications[0].verificationLevel,sheet1);  
                                                    
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(10,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"insuranceVerifications[0].lineItemID","lineItemID")

                         planID = sh.getCell(11,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"insuranceVerifications[0].planID","planID")

                         verificationLevel = sh.getCell(12,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,verificationLevel,"insuranceVerifications[0].verificationLevel","verificationLevel")
                                                  
                     
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(3,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(4,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(3,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineLevelOfInsuranceVerification_MultiLineItem" id="d7d7f749-bbd3-4c67-a763-a84abe574796">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-MultiLineItem-Input.xls"
def outputfile = projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-MultiLineItem-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"verificationLevel",sheet1);
addCell(3,0,"lineItemID1",sheet1);
addCell(4,0,"planID",sheet1);
addCell(5,0,"verificationLevel1",sheet1);
addCell(6,0,"PASS/FAIL",sheet1);
addCell(7,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()
                        
                                //  Input for Line Item ID
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()                                      
                                //Input for productCategory    
                                requestTemplet.content.lineItems[0].productCategory = sh.getCell(2,i).getContents() 
                                //Input for productSubCategory1
                                requestTemplet.content.lineItems[0].productSubCategory1 = sh.getCell(3,i).getContents() 
                                //Input for productSubCategory2
                                requestTemplet.content.lineItems[0].productSubCategory2 = sh.getCell(4,i).getContents() 
                                //Input for productSubCategory3
                                requestTemplet.content.lineItems[0].productSubCategory3 = sh.getCell(5,i).getContents() 
                                //Input for productSubCategory4
                                requestTemplet.content.lineItems[0].productSubCategory4 = sh.getCell(6,i).getContents()
                                 //Input for hcpcsCode
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(7,i).getContents()    

                              //Input for payer1
                                 // Input for Plan
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(8,i).getContents()
                                  // Input for ID
                                requestTemplet.content.lineItems[0].plans[0].id =sh.getCell(9,i).getContents()
                                
                           //Input for LineItem 2
                           //  Input for Line Item ID
                                requestTemplet.content.lineItems[1].lineItemID = sh.getCell(10,i).getContents()                                 
                                //Input for productCategory    
                                requestTemplet.content.lineItems[1].productCategory = sh.getCell(11,i).getContents() 
                                //Input for productSubCategory1
                                requestTemplet.content.lineItems[1].productSubCategory1 = sh.getCell(12,i).getContents() 
                                //Input for productSubCategory2
                                requestTemplet.content.lineItems[1].productSubCategory2 = sh.getCell(13,i).getContents() 
                                //Input for productSubCategory3
                                requestTemplet.content.lineItems[1].productSubCategory3 = sh.getCell(14,i).getContents() 
                                //Input for productSubCategory4
                                requestTemplet.content.lineItems[1].productSubCategory4 = sh.getCell(15,i).getContents()
                                 //Input for hcpcsCode
                                requestTemplet.content.lineItems[1].hcpcsCode = sh.getCell(16,i).getContents()  
                                // Input for Plan
                                requestTemplet.content.lineItems[1].plans[0].planCode = sh.getCell(17,i).getContents()
                                 // Input for ID
                                requestTemplet.content.lineItems[1].plans[0].id =sh.getCell(18,i).getContents()

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request_MultiLineItem');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request_MultiLineItem");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID from response json                                 
                        addCell(0,i,json.insuranceVerifications[0].lineItemID,sheet1);                                   
                          // get PayerID from response json                                   
                        addCell(1,i,json.insuranceVerifications[0].planID,sheet1);   
                          // get contactMethod from response json                           
                        addCell(2,i,json.insuranceVerifications[0].verificationLevel.toString(),sheet1); 

                         addCell(3,i,json.insuranceVerifications[1].lineItemID,sheet1);                                   
                          // get PayerID from response json                                   
                        addCell(4,i,json.insuranceVerifications[1].planID,sheet1);   
                          // get contactMethod from response json                           
                        addCell(5,i,json.insuranceVerifications[1].verificationLevel.toString(),sheet1); 
                                                    
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(19,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"insuranceVerifications[0].lineItemID","lineItemID")

                          planID = sh.getCell(20,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"insuranceVerifications[0].planID","planID")

                         verificationLevel = sh.getCell(21,i).getContents().toString()
                        addAssertionJsonPathMatch(testStepForAssertion,verificationLevel,"insuranceVerifications[0].verificationLevel","verificationLevel")
                                                  
                        lineItemID1 = sh.getCell(22,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID1,"insuranceVerifications[1].lineItemID","lineItemID")

                          planID1 = sh.getCell(23,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID1,"insuranceVerifications[1].planID","planID1")

                         verificationLevel1 = sh.getCell(24,i).getContents().toString()
                        addAssertionJsonPathMatch(testStepForAssertion,verificationLevel1,"insuranceVerifications[1].verificationLevel","verificationLevel")
                                     
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(6,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(7,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(6,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineLevelOfInsuranceVerification_MultiPayers" id="ffa8fab4-ff14-48d0-99cd-58390eff0334">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-MultiPayer-Input.xls"
def outputfile = projectDir + "/DetermineInsuranceVerificationLevel/DetermineInsuranceVerificationLevel-MultiPayer-Output.xls"

//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults")
Sheet jsonInput = wb.getSheet("JSON")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"verificationLevel",sheet1);
addCell(3,0,"lineItemID1",sheet1);
addCell(4,0,"planID",sheet1);
addCell(5,0,"verificationLevel1",sheet1);
addCell(6,0,"PASS/FAIL",sheet1);
addCell(7,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()
                        
                                //  Input for Line Item ID
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()                                    
                                //Input for productCategory    
                                requestTemplet.content.lineItems[0].productCategory = sh.getCell(2,i).getContents() 
                                //Input for productSubCategory1
                                requestTemplet.content.lineItems[0].productSubCategory1 = sh.getCell(3,i).getContents() 
                                //Input for productSubCategory2
                                requestTemplet.content.lineItems[0].productSubCategory2 = sh.getCell(4,i).getContents() 
                                //Input for productSubCategory3
                                requestTemplet.content.lineItems[0].productSubCategory3 = sh.getCell(5,i).getContents() 
                                //Input for productSubCategory4
                                requestTemplet.content.lineItems[0].productSubCategory4 = sh.getCell(6,i).getContents()
                                 //Input for hcpcsCode
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(7,i).getContents()    

                              //Input for payer1
                                 // Input for Plan
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(8,i).getContents()
                                 // Input for ID
                                requestTemplet.content.lineItems[0].plans[0].id =sh.getCell(9,i).getContents()
                                
                           //Input for payer2
                                // Input for Plan
                                requestTemplet.content.lineItems[0].plans[1].planCode = sh.getCell(10,i).getContents()
                                   // Input for ID
                                requestTemplet.content.lineItems[0].plans[1].id =sh.getCell(11,i).getContents()

                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request_MultiPayer');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request_MultiPayer");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID from response json                                 
                        addCell(0,i,json.insuranceVerifications[0].lineItemID,sheet1);                                   
                          // get PayerID from response json                                   
                        addCell(1,i,json.insuranceVerifications[0].planID,sheet1);   
                          // get contactMethod from response json                           
                        addCell(2,i,json.insuranceVerifications[0].verificationLevel,sheet1); 

                         addCell(3,i,json.insuranceVerifications[1].lineItemID,sheet1);                                   
                          // get PayerID from response json                                   
                        addCell(4,i,json.insuranceVerifications[1].planID,sheet1);   
                          // get contactMethod from response json                           
                        addCell(5,i,json.insuranceVerifications[1].verificationLevel,sheet1); 
                                                    
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(12,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"insuranceVerifications[0].lineItemID","lineItemID")

                          planID = sh.getCell(13,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"insuranceVerifications[0].planID","planID")

                         verificationLevel = sh.getCell(14,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,verificationLevel,"insuranceVerifications[0].verificationLevel","verificationLevel")
                                                  
                        lineItemID1 = sh.getCell(15,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID1,"insuranceVerifications[1].lineItemID","lineItemID")

                          planID1 = sh.getCell(16,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID1,"insuranceVerifications[1].planID","planID1")

                         verificationLevel1 = sh.getCell(17,i).getContents()
                        addAssertionJsonPathMatch(testStepForAssertion,verificationLevel1,"insuranceVerifications[1].verificationLevel","verificationLevel")
                                     
                            //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(6,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(7,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(6,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="JSON Request_singleLineItem" id="1eb16c94-c2a1-4b62-a2e2-d723c0bed1e5">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request_singleLineItem" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "INVALID",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA17",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "INVALID",
            "productSubCategory1": "INVALID",
            "productSubCategory2": "INVALID",
            "productSubCategory3": "INVALID",
            "productSubCategory4": "INVALID"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="JSON Request_MultiLineItem" id="78aeca69-5297-4031-a675-f7d5bfd9f483">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request_MultiLineItem" id="230b0a26-40b4-42d0-bffe-283b143b4684" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA003",
                    "planCode": "9027"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "PodsINVALID",
            "productSubCategory4": ""
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PA006",
                    "planCode": "0011"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="JSON Request_MultiPayer" id="22342277-3b73-40e4-adbc-904c586691ac">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request_MultiPayer" id="11e09e25-04de-4d5a-ba83-ae1cf4da6504" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA002",
                    "planCode": "0011"
                },
                {
                    "id": "PA004",
                    "planCode": "null"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67162" id="c6d17ca9-eb38-4bc4-8392-12c2ad310922">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67162" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA01",
                    "planCode": "0011"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="a13cc6d7-592d-4677-b928-b792a5d4e527" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="be3d7688-923e-42fb-9b4a-e6412c4995d2" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9fe13665-18c8-4c9b-89bb-2101217a6f45" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA01</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c9c72d2f-f1df-4bbe-bbc2-aaac24afee2b" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67163" id="430b54fd-4741-459d-9128-fc78f82232b7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67163" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA02",
                    "planCode": "0011"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="22ca04f1-0418-452b-b52b-bb2d5fe81d74" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ecc5528e-6b54-4295-801e-2e2af2b6f10c" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ae71596a-400f-4156-a239-30c967347562" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA02</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f587ae5a-ff8f-47f3-a10e-116426890ab1" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67164" id="49b45c6e-6c0c-4977-85e8-c5f0a6ab82e7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67164" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA03",
                    "planCode": "6046"
                }
            ],
            "productCategory": "Diabetes",
            "productSubCategory1": "Diabetes Testing",
            "productSubCategory2": "Insulin Pump Supplies",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="e934f804-01ae-41fc-85f6-87b8658abf2e" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="11414998-2f0a-4100-b5f4-49a3894c38a6" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="67eb5884-bffb-4bee-a179-068eba1476ba" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA03</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1c803d45-033d-4477-bc47-bc033a23d135" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67165" id="5989e8aa-f098-434f-80ba-1a597fd173dc">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67165" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA04",
                    "planCode": "6399"
                }
            ],
            "productCategory": "Anti-Coagulation",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="0aff3aa0-8d34-4f4a-9728-742d82e190a0" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a1b7e6f1-84ef-4b98-bbeb-ebae979d64ac" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9386dfea-a24c-4224-bc81-9a407e5b6865" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA04</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3ad2b74b-bee3-4f45-9608-65a0272fe475" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67166" id="fd99a164-c39b-47f9-b16e-b2b7d417f4bd">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67166" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA06",
                    "planCode": "7000"
                }
            ],
            "productCategory": "Ostomy",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="752d524e-a0c2-4d58-a31c-491d0a9e5c09" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="44ee591e-39eb-4804-96f1-df8126afd267" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f8aa4cef-3047-43cc-9f0b-a5f3c70cba22" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA06</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ab2533c7-83fc-4619-ae3d-da179f88fc41" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67167" id="b2891645-69a7-49fd-85dc-6e6c5d3ae84e">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67167" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA08",
                    "planCode": "6528"
                }
            ],
            "productCategory": "INVALID",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": "Pods"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9f9fd690-07ed-4c66-8afb-74bbbc4852b9" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="69a10349-d81d-49de-89fb-985dd11b983d" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="38ae293c-f09f-4129-b706-db9548d4d564" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA08</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="77edbe65-f6f8-4f6c-9f71-86184a2b29ab" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67168" id="65a26a2a-a02c-4990-9fa5-ac8903b79d05">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67168" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA09",
                    "planCode": "6056"
                }
            ],
            "productCategory": "Pleural Drainage Products",
            "productSubCategory1": "INVALID",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d1f4c108-cae6-4e13-96f3-2cce0b6c8313" name="Valid HTTP Status Codes_8">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="060b433a-6564-4248-aecb-6eee5488ab6f" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6bde45ca-a9fd-4651-9219-2ffd9924d0ba" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA09</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7f38d72d-8cfb-4ad6-becc-4847e983f14c" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67169" id="4aa101b3-1fe6-4e2a-9092-53d783881892">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67169" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA10",
                    "planCode": "6046"
                }
            ],
            "productCategory": "Diabetes",
            "productSubCategory1": "Diabetes Testing",
            "productSubCategory2": "INVALID",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="561c556a-4fa6-42ba-bcb8-51bc87da2311" name="Valid HTTP Status Codes_9">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="002d71b4-814c-4e2c-980b-d3bda1e25f1d" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="37c16808-e478-4fdd-bbf0-107b9ba900fc" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA10</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="684bcdc3-34c7-436a-ad71-627109b929bf" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67170" id="a5d4ddba-9ce3-45eb-87a1-d5fd91ec9364">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67170" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA11",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "Urological",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9bb8fb9b-be05-4a3b-84bd-fd1b7af630fd" name="Valid HTTP Status Codes_10">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d7518e97-b6fc-48e5-81b9-721500116cb4" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="38d7276f-a321-475d-a051-604d4cb52434" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA11</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0d8ab0b4-7d05-4fb1-929a-8a560c3df821" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67171" id="60cc7aa9-da94-4c26-9146-b5739c2e4a2a">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67171" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA12",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="50f61c99-4fda-4dbf-a168-fea8bf43cf94" name="Valid HTTP Status Codes_11">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cc1c1dd4-f42c-4c63-a010-f28001be02ff" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d2ef4f7d-9e67-40c4-b0f3-b2bb07469381" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA12</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a2ca45de-b6b3-42b7-aea0-20acb23811bf" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67172" id="c7a40e67-d7fb-4bb1-825e-7af378e5722d">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67172" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA13",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "Medical Devices",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="192390fa-900e-4266-8f84-14870db622be" name="Valid HTTP Status Codes_12">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="22cc9c2c-ad48-4006-83e8-c047b3f083b8" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="338ba4f9-265d-4037-90c6-e9abfd3053a2" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA13</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7bc408d6-7855-47f7-abd2-9334f430a8c3" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67173" id="ee644561-3e9e-4645-bd03-9bcc8486d5d7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67173" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA14",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "INVALID",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="54308e7a-e690-4d56-9d17-63b357384fe9" name="Valid HTTP Status Codes_13">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0dc9fae5-7400-4d43-a1da-97a4140d69d7" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0ea33a47-9a25-4d10-a50b-1f526a535d21" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA14</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bad1da06-eaef-47f5-90d1-621ed1171363" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67174" id="a971d2c8-0af4-463f-b909-d324c326a939">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67174" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA15",
                    "planCode": "4130"
                }
            ],
            "productCategory": "null",
            "productSubCategory1": "Tracheostomy",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1a89af57-6c63-41e0-ad9b-bc42fb69a4ae" name="Valid HTTP Status Codes_14">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="51f36c2c-94b7-4356-b7f1-91b1e8688cc0" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c774b944-d3a9-4fce-86ab-7adaf74d8205" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA15</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d464cb50-2bbb-4b87-ac7d-c788a4616d06" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67175" id="bf0437e5-c50a-455c-b259-742b9f7d61a6">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67175" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "INVALID",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA16",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="24a1d635-2c6d-44a0-943f-aa59e261b3f2" name="Valid HTTP Status Codes_15">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1b1a77d5-a3d9-4db8-87bb-fa30fc8f232f" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="90dd7c13-cd9f-42fb-943c-5c0b7469c864" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA16</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="18786483-4a9f-408d-9d5e-1aba0e2143d1" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67176" id="723d39ae-62d4-4ee9-9488-26ee9b36fda8">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67176" id="f21a31ab-9a7a-4ad0-a442-5d388b931718" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "INVALID",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA17",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "INVALID",
            "productSubCategory1": "INVALID",
            "productSubCategory2": "INVALID",
            "productSubCategory3": "INVALID",
            "productSubCategory4": "INVALID"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="4225e818-b091-4c81-8e72-d183a25d09e9" name="Valid HTTP Status Codes_16">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4387e30e-7c43-423d-b131-add254003801" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="85337ab1-ff92-4c32-8b12-3fad880fae77" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA17</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="07d6aa93-aa7d-4b90-a51a-15c9c2559f9b" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67179" id="e325f289-f31e-4d97-937a-2690847acdd7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67179" id="230b0a26-40b4-42d0-bffe-283b143b4684" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4095"
                }
            ],
            "productCategory": "Wound Care",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PA004",
                    "planCode": "0011"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="7d5f40a1-ed49-4bcd-b62d-a849068342d2" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="65069d3c-e39d-4d43-bb69-f02543a7183c" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7d5745ea-2cca-4042-9f33-e89f00d8b352" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6c638450-3240-4996-9179-4c27de4b0384" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aff2f583-582c-4a9f-9179-f5f31fd15aac" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4b2f3fda-4ec8-4766-b308-cfd1ced3ed5f" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA004</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d0a7014e-8a63-4a9d-bfb8-5fc26686fcf7" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67180" id="5deb2a17-7939-4ea1-b962-fafb2c775d29">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67180" id="230b0a26-40b4-42d0-bffe-283b143b4684" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA002",
                    "planCode": "0019"
                }
            ],
            "productCategory": "DiabetesINVALID",
            "productSubCategory1": "Diabetes Testing",
            "productSubCategory2": "Insulin Pumps",
            "productSubCategory3": "",
            "productSubCategory4": ""
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PA005",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9fa638c4-4649-44cc-a5de-6338222679e8" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c343f2a5-31ec-4f2c-98b4-0b43cd0eba6c" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e99a60bd-f3c5-4ff8-9ca8-70a504bfb897" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aff5f94c-d3f1-4267-8282-a1ca115c4381" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bd756b2b-338d-49ab-9b44-a83e1cc2180f" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="387a991b-bd43-47b0-a7bb-d8802bccc460" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA005</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="784b667f-35b7-4a25-a5c0-1898a32cb699" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67181" id="4aafcd59-e165-4b70-acbb-226bc3728400">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67181" id="230b0a26-40b4-42d0-bffe-283b143b4684" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA003",
                    "planCode": "null"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        },
        {
            "hcpcsCode": "null",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PA006",
                    "planCode": "9120"
                }
            ],
            "productCategory": "Incontinence",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="3d4b3bf4-6718-4b19-b0c6-2d3951bfcae0" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a87cadf4-81f0-4272-bd00-eb4808ab3917" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2fa62a4e-3dd9-490d-ad98-0167090e2053" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA003</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2925d913-7ca8-4ff4-bca2-f9184d257f10" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8d6d1d0e-f628-4b7f-bdc5-98e3e23093a6" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2533adca-2862-499c-9dfd-d4d4446c7c72" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA006</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bb35d7dd-a6a2-4b66-947d-1f9033162847" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67182" id="dcf2c2dc-b70b-4193-90cb-29e978a23b7b">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67182" id="230b0a26-40b4-42d0-bffe-283b143b4684" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA003",
                    "planCode": "9027"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": "",
            "productSubCategory3": "PodsINVALID",
            "productSubCategory4": ""
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PA006",
                    "planCode": "0011"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="ef0d8ad4-555e-47a7-ad29-2c65d842ec52" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="12b14c4b-85e4-487d-8461-93873d0cb998" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f193f610-3c88-4fe2-b53c-91ec58f5d77b" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA003</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="928d19fb-46e7-4bc8-a00c-58b2b7caf646" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="935a4135-7faf-4fe9-8387-ba8af4744362" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="74b41f11-9559-4334-ba7a-35ab844a4edf" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA006</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="80620d9f-8584-4bc6-b685-24d0b2133931" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67177" id="0cc5b06a-7b8c-4287-8412-137fd235ef72">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67177" id="11e09e25-04de-4d5a-ba83-ae1cf4da6504" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "1607"
                },
                {
                    "id": "PA003",
                    "planCode": "INVALID"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "",
            "productSubCategory2": " Insulin Pump Supplies",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9b6e2c7c-74a7-4206-8a1c-55be8700c04d" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="68ce8019-48ee-4ee0-9c9e-991f47299b1a" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e5334fb3-044b-455f-a360-46e1334d5655" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8162a884-7c2b-4f13-b5e5-267aeb259313" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>3</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6d058bd6-c295-4404-a5fb-0bfdd473ad6f" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7852a861-6c03-432a-8e45-f418873666d4" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA003</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="61210f6c-868d-4a22-817e-ca86afe70518" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-67178" id="24d27c77-d754-41b5-bc8c-53dd661f32ee">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL" methodName="DetermineLevelOfInsuranceVerification" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-67178" id="11e09e25-04de-4d5a-ba83-ae1cf4da6504" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA002",
                    "planCode": "0011"
                },
                {
                    "id": "PA004",
                    "planCode": "null"
                }
            ],
            "productCategory": "",
            "productSubCategory1": "Breast Pumps",
            "productSubCategory2": "",
            "productSubCategory3": "",
            "productSubCategory4": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineLevelOfInsuranceVerification/DetermineLevelOfInsuranceVerification/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9bad568b-800b-4a04-a361-05e5fc6c2c93" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6c50813b-33cf-4d61-a3c6-cb418305b146" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="875d3368-1a44-4a28-a8cb-4f0a4f7c172c" name="planID">
          <con:configuration>
            <path>insuranceVerifications[0].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4d42ac01-64f5-423a-82e1-51c1a2372a08" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[0].verificationLevel</path>
            <content>2</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f5edad77-ad01-4f29-9a22-1d3325967a37" name="lineItemID">
          <con:configuration>
            <path>insuranceVerifications[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1ebd0779-1a56-4282-80a2-f27f78876a7c" name="planID1">
          <con:configuration>
            <path>insuranceVerifications[1].planID</path>
            <content>PA004</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0a95af32-d6e0-4173-ac88-4393e6623181" name="verificationLevel">
          <con:configuration>
            <path>insuranceVerifications[1].verificationLevel</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
