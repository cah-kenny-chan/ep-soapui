<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="42a8461c-b9ac-4b05-93a5-fd45636bd8af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DetermineDateSpanRequiredAndCalculation" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="42a8461c-b9ac-4b05-93a5-fd45636bd8affileName">DetermineDateSpanRequiredAndCalculation</con:setting>
  </con:settings>
  <con:testStep type="restrequest" name="JSON Request" id="6dc6741a-41ed-491a-b376-151d00261b4d">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2021-02-10T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "1",
            "hcpcsCode": "AS927H",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                },
                {
                    "id": "PA002",
                    "planCode": "6920"
                }
            ],
            "prescribedQuantityDays": "6",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineDateSpanRequiredAndCalculation-SingleLineItem" id="6192c5e5-866f-4773-9e0c-3922bab34b31">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-Input.xls"
def outputfile = projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-SingleLineItem-Output.xls"


//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults_singleLineItem")
Sheet jsonInput = wb.getSheet("JSON_SingleLineItem")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"startDate",sheet1);
addCell(3,0,"endDate",sheet1);
addCell(4,0,"PASS/FAIL",sheet1);
addCell(5,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                                                        
                                 //Input for Line Item ID                                                             
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents().toString()
                                //Input for supplyPeriod                                  
                                requestTemplet.content.lineItems[0].supplyPeriod = sh.getCell(3,i).getContents() 
                                //Input for extendedUnits                                  
                                requestTemplet.content.lineItems[0].extendedUnits = sh.getCell(4,i).getContents() 
                                //Input for unitsOfThePrescribedQuantity                                  
                                requestTemplet.content.lineItems[0].unitsOfThePrescribedQuantity = sh.getCell(5,i).getContents() 
                                //Input for prescribedQuantityDays                                  
                                requestTemplet.content.lineItems[0].prescribedQuantityDays = sh.getCell(6,i).getContents()
                                //Input for expectedShipDate                                  
                                requestTemplet.content.lineItems[0].expectedShipDate = sh.getCell(7,i).getContents() 
                                //Input for actualShipDate                                  
                                requestTemplet.content.lineItems[0].actualShipDate = sh.getCell(8,i).getContents() 
                                //Input for id                                  
                                requestTemplet.content.lineItems[0].plans[0].id = sh.getCell(9,i).getContents()
                                //Input for planCode                                  
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(10,i).getContents()                                                                                                                   
                                                                                     
                                 
                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get planID from response json  
                        addCell(0,i,json.dateSpan[0].lineItemID,sheet1);                                   
                          // get planID from response json                               
                        addCell(1,i,json.dateSpan[0].planID,sheet1);                                   
                          // get startDate from response json                                   
                        addCell(2,i,json.dateSpan[0].startDate.toString(),sheet1); 
                        // get endDate from response json                                 
                        addCell(3,i,json.dateSpan[0].endDate.toString(),sheet1); 
                                     
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                         lineItemID = sh.getCell(11,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"dateSpan[0].lineItemID","lineItemID")

                          planID = sh.getCell(12,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"dateSpan[0].planID","planID")

                          startDate = sh.getCell(13,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,startDate,"dateSpan[0].startDate","startDate")

                       endDate = sh.getCell(14,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,endDate,"dateSpan[0].endDate","endDate")

                                              
                               //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(4,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(5,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(4,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineDateSpanRequiredAndCalculation-MultiLineItem" id="736473a2-b518-466a-9d8a-391f83a81f61">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-Input.xls"
def outputfile = projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-MultiLineItem-Output.xls"


//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults_MultiLineItem")
Sheet jsonInput = wb.getSheet("JSON_MultiLineItem")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"startDate",sheet1);
addCell(3,0,"endDate",sheet1);
addCell(4,0,"lineItemID1",sheet1);
addCell(5,0,"planID1",sheet1);
addCell(6,0,"startDate1",sheet1);
addCell(7,0,"endDate1",sheet1);
addCell(8,0,"PASS/FAIL",sheet1);
addCell(9,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                                  //Input For LineItem1                    
                                 //Input for Line Item ID                                                             
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents().toString()
                                //Input for supplyPeriod                                  
                                requestTemplet.content.lineItems[0].supplyPeriod = sh.getCell(3,i).getContents() 
                                //Input for extendedUnits                                  
                                requestTemplet.content.lineItems[0].extendedUnits = sh.getCell(4,i).getContents() 
                                //Input for unitsOfThePrescribedQuantity                                  
                                requestTemplet.content.lineItems[0].unitsOfThePrescribedQuantity = sh.getCell(5,i).getContents() 
                                //Input for prescribedQuantityDays                                  
                                requestTemplet.content.lineItems[0].prescribedQuantityDays = sh.getCell(6,i).getContents()
                                //Input for expectedShipDate                                  
                                requestTemplet.content.lineItems[0].expectedShipDate = sh.getCell(7,i).getContents() 
                                //Input for actualShipDate                                  
                                requestTemplet.content.lineItems[0].actualShipDate = sh.getCell(8,i).getContents() 
                                //Input for id                                  
                                requestTemplet.content.lineItems[0].plans[0].id = sh.getCell(9,i).getContents()
                                //Input for planCode                                  
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(10,i).getContents()
                                 
                                 //Input for LineItem2
                                //Input for Line Item ID                                                             
                                requestTemplet.content.lineItems[1].lineItemID = sh.getCell(11,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[1].hcpcsCode = sh.getCell(12,i).getContents().toString()
                                //Input for supplyPeriod                                  
                                requestTemplet.content.lineItems[1].supplyPeriod = sh.getCell(13,i).getContents() 
                                //Input for extendedUnits                                  
                                requestTemplet.content.lineItems[1].extendedUnits = sh.getCell(14,i).getContents() 
                                //Input for unitsOfThePrescribedQuantity                                  
                                requestTemplet.content.lineItems[1].unitsOfThePrescribedQuantity = sh.getCell(15,i).getContents() 
                                //Input for prescribedQuantityDays                                  
                                requestTemplet.content.lineItems[1].prescribedQuantityDays = sh.getCell(16,i).getContents()
                                //Input for expectedShipDate                                  
                                requestTemplet.content.lineItems[1].expectedShipDate = sh.getCell(17,i).getContents() 
                                //Input for actualShipDate                                  
                                requestTemplet.content.lineItems[1].actualShipDate = sh.getCell(18,i).getContents()                              
                                 //Input for id                                  
                                requestTemplet.content.lineItems[1].plans[0].id = sh.getCell(19,i).getContents()
                                //Input for planCode                                  
                                requestTemplet.content.lineItems[1].plans[0].planCode = sh.getCell(20,i).getContents()                                                                                                                     
                                                                                     
                                 
                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                            //Get response for payer1
                           // get lineItemID from response json  
                        addCell(0,i,json.dateSpan[0].lineItemID,sheet1);                                   
                           // get planID from response json                               
                        addCell(1,i,json.dateSpan[0].planID,sheet1);                                   
                           // get startDate from response json                                   
                        addCell(2,i,json.dateSpan[0].startDate.toString(),sheet1); 
                           // get endDate from response json                                 
                        addCell(3,i,json.dateSpan[0].endDate.toString(),sheet1);
                          //Get response for payer2
                         // get lineItemID from response json
                        addCell(4,i,json.dateSpan[1].lineItemID,sheet1);                                   
                          // get planID from response json                               
                        addCell(5,i,json.dateSpan[1].planID,sheet1);                                   
                          // get startDate from response json                                   
                        addCell(6,i,json.dateSpan[1].startDate.toString(),sheet1); 
                        // get endDate from response json                                 
                        addCell(7,i,json.dateSpan[1].endDate.toString(),sheet1); 
                                     
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                         lineItemID = sh.getCell(21,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"dateSpan[0].lineItemID","lineItemID")

                          planID = sh.getCell(22,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"dateSpan[0].planID","planID")

                          startDate = sh.getCell(23,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,startDate,"dateSpan[0].startDate","startDate")

                       endDate = sh.getCell(24,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,endDate,"dateSpan[0].endDate","endDate")

                       lineItemID1 = sh.getCell(25,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID1,"dateSpan[1].lineItemID","lineItemID")

                          planID1 = sh.getCell(26,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID1,"dateSpan[1].planID","planID")

                          startDate1 = sh.getCell(27,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,startDate1,"dateSpan[1].startDate","startDate")

                       endDate1 = sh.getCell(28,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,endDate1,"dateSpan[1].endDate","endDate")

                                              
                               //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(8,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(9,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(8,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineDateSpanRequiredAndCalculation-MultiPayer" id="39801e26-11fd-4873-8041-f47e319b3ea0">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-Input.xls"
def outputfile = projectDir + "/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation-MultiPayer-Output.xls"


//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("ExpectedResults_MultiPayer")
Sheet jsonInput = wb.getSheet("JSON_MultiPayer")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"planID",sheet1);
addCell(2,0,"startDate",sheet1);
addCell(3,0,"endDate",sheet1);
addCell(4,0,"lineItemID1",sheet1);
addCell(5,0,"planID1",sheet1);
addCell(6,0,"startDate1",sheet1);
addCell(7,0,"endDate1",sheet1);
addCell(8,0,"PASS/FAIL",sheet1);
addCell(9,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                                                        
                                 //Input for Line Item ID                                                             
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents().toString()
                                //Input for supplyPeriod                                  
                                requestTemplet.content.lineItems[0].supplyPeriod = sh.getCell(3,i).getContents() 
                                //Input for extendedUnits                                  
                                requestTemplet.content.lineItems[0].extendedUnits = sh.getCell(4,i).getContents() 
                                //Input for unitsOfThePrescribedQuantity                                  
                                requestTemplet.content.lineItems[0].unitsOfThePrescribedQuantity = sh.getCell(5,i).getContents() 
                                //Input for prescribedQuantityDays                                  
                                requestTemplet.content.lineItems[0].prescribedQuantityDays = sh.getCell(6,i).getContents()
                                //Input for expectedShipDate                                  
                                requestTemplet.content.lineItems[0].expectedShipDate = sh.getCell(7,i).getContents() 
                                //Input for actualShipDate                                  
                                requestTemplet.content.lineItems[0].actualShipDate = sh.getCell(8,i).getContents() 
                                //Inputs for Payer 1
                                //Input for id                                  
                                requestTemplet.content.lineItems[0].plans[0].id = sh.getCell(9,i).getContents()
                                //Input for planCode                                  
                                requestTemplet.content.lineItems[0].plans[0].planCode = sh.getCell(10,i).getContents()
                                //Inputs for Payer 2
                                //Input for id                                  
                                requestTemplet.content.lineItems[0].plans[1].id = sh.getCell(11,i).getContents()
                                //Input for planCode                                  
                                requestTemplet.content.lineItems[0].plans[1].planCode = sh.getCell(12,i).getContents()                                                                                                                     
                                                                                     
                                 
                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                            //Get response for payer1
                           // get lineItemID from response json  
                        addCell(0,i,json.dateSpan[0].lineItemID,sheet1);                                   
                           // get planID from response json                               
                        addCell(1,i,json.dateSpan[0].planID,sheet1);                                   
                           // get startDate from response json                                   
                        addCell(2,i,json.dateSpan[0].startDate.toString(),sheet1); 
                           // get endDate from response json                                 
                        addCell(3,i,json.dateSpan[0].endDate.toString(),sheet1);
                          //Get response for payer2
                         // get lineItemID from response json
                        addCell(4,i,json.dateSpan[1].lineItemID,sheet1);                                   
                          // get planID from response json                               
                        addCell(5,i,json.dateSpan[1].planID,sheet1);                                   
                          // get startDate from response json                                   
                        addCell(6,i,json.dateSpan[1].startDate.toString(),sheet1); 
                        // get endDate from response json                                 
                        addCell(7,i,json.dateSpan[1].endDate.toString(),sheet1); 
                                     
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                         lineItemID = sh.getCell(13,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"dateSpan[0].lineItemID","lineItemID")

                          planID = sh.getCell(14,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID,"dateSpan[0].planID","planID")

                          startDate = sh.getCell(15,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,startDate,"dateSpan[0].startDate","startDate")

                       endDate = sh.getCell(16,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,endDate,"dateSpan[0].endDate","endDate")

                       lineItemID1 = sh.getCell(17,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID1,"dateSpan[1].lineItemID","lineItemID")

                          planID1 = sh.getCell(18,i).getContents()
                       addAssertionJsonPathMatch(testStepForAssertion,planID1,"dateSpan[1].planID","planID")

                          startDate1 = sh.getCell(19,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,startDate1,"dateSpan[1].startDate","startDate")

                       endDate1 = sh.getCell(20,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,endDate1,"dateSpan[1].endDate","endDate")

                                              
                               //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(8,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(9,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(8,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

                }             
     
catch(Exception e)
{

                 log.info(e)                         
}

finally
{

    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63754" id="2463e03e-e0f2-475c-a7f7-befcec158a61">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63754" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-03-21T00:00:00.000+0000",
            "expectedShipDate": "2020-03-20T00:00:00.000+0000",
            "extendedUnits": "0",
            "hcpcsCode": "K0553",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="97b7e37c-7536-4ff2-aa83-cefe01227cf6" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ee26a116-ee01-4866-9697-61afae566a43" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2e0da6c3-d1bd-4c49-bea3-e3a8bb39a1f4" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f24ccb0a-15fc-412b-9c35-5524a2f0d0f7" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-03-21T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ab2596f7-df41-41f7-82e8-1280df87be46" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-03-21T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63755" id="e26e2eca-63f0-42b5-b027-46140e251784">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63755" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "",
            "extendedUnits": "0",
            "hcpcsCode": "A9278",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "0011"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="be84f059-d7c7-4402-8c1e-de48ff37d53c" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7eabfc99-df09-4491-987e-6d5fad8272d5" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="13f16f1d-93e2-49a5-aabb-0e4b2b110445" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6303f606-7b14-4d39-8fef-da1707423b10" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d43c1103-a987-483e-bd5f-3e3b44065e1e" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63756" id="1321465e-9011-4f63-9114-4b6816029988">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63756" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "2020-02-10T00:00:00.000+0000",
            "extendedUnits": "3",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                }
            ],
            "prescribedQuantityDays": "6",
            "supplyPeriod": "4",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9c89d520-be6f-47a4-a75c-90f3a1090501" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f0688edf-ddb2-4c1f-8f22-a8e2588e444e" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="694b7c1e-b60b-4526-b08f-a10599204229" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b3543b1c-4d27-4645-953f-c476e1a10fad" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-02-10T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5384795e-049b-4553-909b-0c7a9cab9c57" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-02-18T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63757" id="9b38388e-1b70-46f5-bd58-f4f8b25d1932">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63757" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2019-02-01T00:00:00.000+0000",
            "expectedShipDate": "2019-01-01T00:00:00.000+0000",
            "extendedUnits": "2",
            "hcpcsCode": "ASD12",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4130"
                }
            ],
            "prescribedQuantityDays": "9",
            "supplyPeriod": "5",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="fdcf8156-25d8-4771-8b57-2ef6f18ebaec" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5141cc55-0791-4884-a920-1923aaed7cc9" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d773d88d-0768-44f6-8c9a-c0e414c636c3" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6a53bef7-d24b-4765-b4ef-c466819222d6" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cb8bf23c-ca90-469e-ab47-f193f9a9e8f1" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63758" id="f8ff946e-ad79-4e01-b7ed-792ba101cf0a">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63758" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2019-02-01T00:00:00.000+0000",
            "expectedShipDate": "2019-01-01T00:00:00.000+0000",
            "extendedUnits": "2",
            "hcpcsCode": "A4224",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "9997"
                }
            ],
            "prescribedQuantityDays": "9",
            "supplyPeriod": "5",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="959462a6-020d-453f-aa4f-f55bd6db284d" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5989f5fe-a4a2-4c67-a550-bddd32ceac22" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6aeadbbc-0139-4105-b318-b34fc3272217" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c0863372-af12-424a-ad16-63952d73a633" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="51e3c659-a390-45e5-8f2f-adadba2fc50a" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63759" id="d3569b06-d82c-470b-a3ce-dd749ae02d10">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63759" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2019-12-22T00:00:00.000+0000",
            "expectedShipDate": "2019-11-22T00:00:00.000+0000",
            "extendedUnits": "4",
            "hcpcsCode": "A4224",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "0019"
                }
            ],
            "prescribedQuantityDays": "4",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="3562a074-b1b1-4bd4-ae16-9127c99a10d8" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d16abddb-ff09-4395-b723-ba3e70f1031f" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bfda67cb-0f34-4078-9c12-c3b9e406064c" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7949b2f8-d359-4909-a92b-98c18b87ef09" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2019-12-22T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="403361b3-4dba-44a5-8510-0251cdbfe536" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2019-12-22T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63760" id="e6bd626e-b25b-491c-8c31-8916c9576535">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63760" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "null",
            "expectedShipDate": "null",
            "extendedUnits": "5",
            "hcpcsCode": "A4224",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4130"
                }
            ],
            "prescribedQuantityDays": "10",
            "supplyPeriod": "4",
            "unitsOfThePrescribedQuantity": "5"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c9f151e2-1dbf-4d74-baaa-1f2afa03d874" name="Valid HTTP Status Codes_8">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="eeb2e307-d4b6-4c61-b905-c6e622d9100c" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="983d8b28-b80d-4ac1-85d2-97515c9d711c" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b0a22998-80df-4b2a-84ff-185d59c29fcd" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="80dff6a7-c9b2-47cb-9545-012d850c1e60" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63761" id="c0ff93b4-35af-4424-900e-129043c96a7f">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63761" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-03-05T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "1",
            "hcpcsCode": "A4253",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4223"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "6",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="3ea12430-b935-43ba-a37b-2e3bf3e3081a" name="Valid HTTP Status Codes_9">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="35993e87-fc92-4912-a389-efca08c70f02" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="07db4f46-a31d-4025-8812-a25fc867bcd9" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="dcb57784-7105-4423-88a0-2a27ba3d4784" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-03-05T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="900a65c7-18e8-4dcc-b913-6d7c2ce9548f" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-03-10T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63762" id="6e236561-0b7e-4ba3-b755-bcee4c33f038">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63762" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "2020-02-02T00:00:00.000+0000",
            "extendedUnits": "0",
            "hcpcsCode": "A9274",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "8030"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "3",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="bf2870af-bfda-4080-8fc8-f7ed04e7974c" name="Valid HTTP Status Codes_10">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9f34c177-1fb5-487e-b273-42b910645004" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="375ccf89-5d06-4475-8983-b098ec5ac7bc" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a74712fc-c038-4096-8c33-80487bd298aa" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-02-02T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="01842bdb-9b12-4ac6-8bbf-37b7a6563fb4" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-02-04T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63763" id="36e6b57c-4114-4271-81bd-73f43ebb8147">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63763" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "",
            "extendedUnits": "",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "8030"
                }
            ],
            "prescribedQuantityDays": "",
            "supplyPeriod": "",
            "unitsOfThePrescribedQuantity": ""
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c0f64371-5f4d-49f7-bb66-374e00c0cad4" name="Valid HTTP Status Codes_11">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6f8e15dc-d994-4d87-8653-14e057e3f756" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e6ca136b-e24e-4138-b3ae-6e4d85634087" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="94a31bee-d2dc-4cbc-a2f4-21a24843524c" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="98e4e6be-716c-4959-a646-5b8340dc8456" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63764" id="06e7ad61-9ee5-4fda-8f19-ff862eb1f7b1">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63764" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-06-16T00:00:00.000+0000",
            "expectedShipDate": "2020-06-15T00:00:00.000+0000",
            "extendedUnits": "5",
            "hcpcsCode": "A4253",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "6046"
                }
            ],
            "prescribedQuantityDays": "5",
            "supplyPeriod": "0",
            "unitsOfThePrescribedQuantity": "5"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="6dfdc512-9e16-4766-8746-847d3808fce9" name="Valid HTTP Status Codes_12">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d0dce89f-40b0-47e8-8bda-e510897480f6" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2fb2c9ea-ee9a-4e14-bb7c-ae2e041acd64" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a4ac2ed6-74c6-40aa-ade5-fc7cdf197f75" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-06-16T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="539f3c84-9961-4212-bd2a-75477435e0dd" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-06-20T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63772" id="59798995-c6b1-4daa-b5e9-c91659b30ce7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63772" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "2019-12-01T00:00:00.000+0000",
            "extendedUnits": "2",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4223"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "1"
        },
        {
            "actualShipDate": "2020-08-08T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "1",
            "hcpcsCode": "K0553",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PB002",
                    "planCode": "4130"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c6741b84-318e-4e95-a5dd-3f33fc91703d" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e5c0fa5f-0d59-46d8-b198-a2123e0dac19" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8ee288d2-10ac-49ce-8b2b-83d0c3c40386" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ecd8f81b-8ef3-4c83-8b47-e4cd0d1a0f8c" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2019-12-01T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8ad2763c-a3d9-44c3-beef-1d5d4a52f2d4" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2019-12-02T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fa9a96ea-2c18-4099-bbdf-b795ecb9092c" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="55a60c91-03db-4e01-8dc1-e50318839cad" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PB002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0941f240-96a7-4c79-bf9d-e4f2b9daac54" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>2020-08-08T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ba813c4c-e2c3-4b0e-afa8-620801ab1ea8" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>2020-08-08T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63773" id="6d9a6036-cbab-436d-b536-30ff9a94b9ce">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63773" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "2019-12-01T00:00:00.000+0000",
            "extendedUnits": "2",
            "hcpcsCode": "D9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4223"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "1"
        },
        {
            "actualShipDate": "2020-08-08T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "1",
            "hcpcsCode": "K0553",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PB002",
                    "planCode": "B195123"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="6e6a2b5a-f132-457c-936c-278ebb6d6b94" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a634c15e-199f-4715-9470-98632226ac08" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a1176b08-23ee-4dbc-a003-34811eba348c" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ee518419-d83e-41ce-9149-8b1fa3cf62c3" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b2a397df-9a11-4e87-866f-fb704ef5198f" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="50c6ed5c-c084-43f7-b709-e65222921559" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="22b81db2-bda5-45ce-9d06-cb0367196fc9" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PB002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fbc9098e-0dc0-42d4-bc60-64e50640c013" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8e384888-eec0-46d0-9415-4ac067859d5b" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63774" id="e8835e8f-d28a-4144-84b7-7bf19c1f8a9c">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63774" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-11-02T00:00:00.000+0000",
            "expectedShipDate": "2020-11-01T00:00:00.000+0000",
            "extendedUnits": "1",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "0019"
                }
            ],
            "prescribedQuantityDays": "1",
            "supplyPeriod": "5",
            "unitsOfThePrescribedQuantity": "0"
        },
        {
            "actualShipDate": "",
            "expectedShipDate": "",
            "extendedUnits": "3",
            "hcpcsCode": "K0553",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PB002",
                    "planCode": "4130"
                }
            ],
            "prescribedQuantityDays": "4",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="e68a2ca8-0ebf-42ba-a154-3666ba8fdb82" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9c6f2e20-3a2c-4258-8fbe-f1badc1ac773" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f6348a21-e33c-4a6e-b065-78a9c58e8554" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ea5a0502-a94b-4a6e-a26e-a1350a114788" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-11-02T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1a1b18b3-7233-45f6-a152-df2c2a57ad85" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-11-06T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="de203026-85ba-40e4-9ecd-6219c81e55fc" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a9caed6c-ee7a-448d-bbcc-a79ee34ea50c" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PB002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="88f94af7-1dd5-4f70-8594-ce92d156e312" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3d88ae55-8ced-430d-89c9-c63f14f15e2d" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63775" id="452e518e-9399-4c05-838c-988918ba32bf">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63775" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-11-02T00:00:00.000+0000",
            "expectedShipDate": "2020-11-01T00:00:00.000+0000",
            "extendedUnits": "2",
            "hcpcsCode": "A4259",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "6920"
                }
            ],
            "prescribedQuantityDays": "3",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "2"
        },
        {
            "actualShipDate": "2020-06-18T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "0",
            "hcpcsCode": "K0553",
            "lineItemID": "L002",
            "plans": [
                {
                    "id": "PB002",
                    "planCode": "6621"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="faed2b72-5bbb-4c64-a341-7c5d8fc7f0d7" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6ac6fe51-eaf5-416d-8f04-21a631fbf35d" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1b3e387b-bec6-4a77-bea2-e034fe036095" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="37cf053e-05e3-4a86-8a0e-be848adb5038" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-11-02T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="98760703-7ecd-4725-9100-d6b433301593" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-11-04T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d022f10b-4442-48cb-9e2a-6cd577528184" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="90290424-9ff6-4a18-b70c-1a3a2a70f3f3" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PB002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="597523d9-442a-40b3-8789-0a5e11a97940" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1e92ebdb-85ec-4d76-964c-5f9c1e442839" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63765" id="c1a1dc7b-c85b-42d4-bd7a-d93df9722f0d">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63765" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-04-21T00:00:00.000+0000",
            "expectedShipDate": "2020-04-20T00:00:00.000+0000",
            "extendedUnits": "0",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "0019"
                },
                {
                    "id": "PA002",
                    "planCode": "0019"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "4",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="c18f098a-f434-46e2-8b68-e8d0444f2c31" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="294e3a59-3ea0-4119-8ac2-229e93dc7139" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b7c8e169-3746-4146-915c-9ef0229f5bd5" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a229e294-53b9-4583-8de0-f87e567104c2" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-04-21T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="99332b3b-8493-42b4-a04b-34a2c3082014" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-04-24T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="70a52bf2-f8d4-4f99-9294-d7577d1387b6" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bb93a3b0-d6b7-44d4-8e59-af9496f2b152" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="04df79cc-cecf-40be-ac14-8ad40becb052" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>2020-04-21T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c3dec224-95ee-4875-8316-7728ae07ce85" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>2020-04-24T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63766" id="5c4dd7b8-f889-4ab7-b385-7b7b339fcb2e">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63766" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "",
            "extendedUnits": "2",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                },
                {
                    "id": "PA002",
                    "planCode": "9997"
                }
            ],
            "prescribedQuantityDays": "2",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="eb5bc128-db82-4bcc-b05a-76cc9e805fcc" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5f5e5ea9-348b-4c3c-94b5-cbb6ac25347b" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="69be467b-8a94-429c-8ef0-6b6c74a73dde" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ce8ff48b-4261-4103-a4d8-e58210624479" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="eba814c0-a1f7-474e-87be-94b8aeb5ae38" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c041b4f0-c4b8-4393-9968-73e0db121c80" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a0923686-da60-4784-8d0e-cfdb51d1296a" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3a375552-c662-4316-bef8-9b4f2373a9aa" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f425cc75-c7af-41d7-81dc-c6cbeeef1161" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63767" id="d59c533c-ead1-4584-a831-a08df05d1943">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63767" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2020-09-02T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "2",
            "hcpcsCode": "A4259",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "4223"
                },
                {
                    "id": "PA002",
                    "planCode": "9997"
                }
            ],
            "prescribedQuantityDays": "2",
            "supplyPeriod": "2",
            "unitsOfThePrescribedQuantity": "1"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="da78e4b4-46df-494a-901a-cc5dc2a16105" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9f476a5c-e897-43e4-9f9f-694156bb6f0a" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="36eba224-c806-49a9-a553-7414cd3d1dac" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="532548e3-6d02-4757-b714-53be302dcceb" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2020-09-02T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="79dcad84-79a5-4ec0-ae7a-1e5fee213dd2" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2020-09-05T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c7f617ad-b51a-4c17-ad54-deb36e78932d" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f314d899-8d8e-403f-a01d-1c9d9eee063d" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e2316942-090c-4169-bfae-bd7ad86b551e" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3611250f-bd84-4066-818e-6d952c8b7aca" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63768" id="76bf7332-b0e2-45fb-a200-9dd146cfef1c">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63768" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "",
            "expectedShipDate": "2021-02-10T00:00:00.000+0000",
            "extendedUnits": "3",
            "hcpcsCode": "A9277",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "9997"
                },
                {
                    "id": "PA002",
                    "planCode": "0019"
                }
            ],
            "prescribedQuantityDays": "6",
            "supplyPeriod": "0",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="becfd850-eb2e-4729-8d80-fd3b81cc7005" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cf5a58ad-7556-43ac-9b92-0560c6c446a8" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="64c494a5-1e5c-4adc-9b05-2fb446ec3815" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="cd3efe53-25b3-4712-8534-3654f86adac2" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="660968d2-d8e5-40b6-a304-facc22942535" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3d1cd69d-af30-4cfb-8c46-7158009d70e1" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1e082599-4c9a-497b-9e89-754cd54d4846" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fefb79c7-6899-49ce-8ab4-a014edaff34c" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>2021-02-10T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="be588723-b28d-41e0-8d6b-58207370b88b" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>2021-02-18T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63769" id="040bd0d2-2494-40f7-b102-50b068811cea">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63769" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2021-02-10T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "3",
            "hcpcsCode": "AS927H",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                },
                {
                    "id": "PA002",
                    "planCode": "0019"
                }
            ],
            "prescribedQuantityDays": "6",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="5230436a-ea9c-40ec-825c-1dd857784610" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e0181f2f-b5ef-4b85-b1c7-cb47c7ee8546" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="acff9005-5267-4f9e-9067-fdf01f792444" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2265a754-8dda-48e4-a9bb-f9aba37084d3" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2e38d188-6862-4e2c-8aa4-dd1be14533e3" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0a8450b2-df22-4385-8c1b-e544540ba9e4" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a9f83c89-6161-4c43-972d-406ff1a9317b" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9c25719f-d966-4163-8e33-dd59637a8265" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="7e9f1557-e555-4975-b8df-bbf20011ac40" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63770" id="cebc7674-0286-41e1-9d88-e9cf0eb0728d">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63770" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2021-07-10T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "0",
            "hcpcsCode": "A4259",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "6298"
                },
                {
                    "id": "PA002",
                    "planCode": "6046"
                }
            ],
            "prescribedQuantityDays": "0",
            "supplyPeriod": "7",
            "unitsOfThePrescribedQuantity": "0"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="721f19a2-c867-45d5-91e3-ff06344d37f5" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0bcd28ed-d5fd-4ec5-b64d-867ef29b99f4" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="679c1727-0381-4fa7-a7c3-2963dde7d295" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="97e9981e-05ad-4417-8c82-9f64a86ee247" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>2021-07-10T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8351399a-a7af-4718-84cb-ba3e6f6298f2" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>2021-07-16T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0b6142e8-48f7-4e9f-9946-4b88bf729f3b" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="280fa3c7-9859-44d9-994c-827a52dfa302" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a1ed0db5-6413-4bf5-b479-13425b6cf54f" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>2021-07-10T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="e7033652-18be-409c-96b0-372e59925e23" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>2021-07-16T00:00:00.000+0000</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-63771" id="7270324b-fda2-4e45-97cf-73357141edfa">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL" methodName="DetermineDateSpanRequiredAndCalculation" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-63771" id="98f9ed3b-f333-4780-b375-bae44bdfa0a0" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "__DecisionID__": "string",
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "ABC",
            "correlationID": " IrKi27e1lMYrHGqA5CZRGL6i ",
            "from": "PCF",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "actualShipDate": "2021-02-10T00:00:00.000+0000",
            "expectedShipDate": "",
            "extendedUnits": "1",
            "hcpcsCode": "AS927H",
            "lineItemID": "L001",
            "plans": [
                {
                    "id": "PA001",
                    "planCode": "7118"
                },
                {
                    "id": "PA002",
                    "planCode": "6920"
                }
            ],
            "prescribedQuantityDays": "6",
            "supplyPeriod": "1",
            "unitsOfThePrescribedQuantity": "2"
        }
    ]
}</con:request>
        <con:originalUri>http://lqec5009c1ods01/DecisionService/rest/v1/DetermineDateSpanRequiredAndCalculation/DetermineDateSpanRequiredAndCalculation/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="0b06b87e-ade7-4e8e-a680-7b013443e9af" name="Valid HTTP Status Codes_8">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="6065d4ad-f48e-443f-a65c-fdec14486a95" name="lineItemID">
          <con:configuration>
            <path>dateSpan[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a66c505b-4037-4a56-959f-37a84f7fbffe" name="planID">
          <con:configuration>
            <path>dateSpan[0].planID</path>
            <content>PA001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8a7a8b71-f837-4b64-8a53-77f0d1671358" name="startDate">
          <con:configuration>
            <path>dateSpan[0].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ff878c65-cf9c-462f-8aba-9ab692bd77cf" name="endDate">
          <con:configuration>
            <path>dateSpan[0].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="061a9be1-85cf-43ae-b64a-1b6d31241f0f" name="lineItemID">
          <con:configuration>
            <path>dateSpan[1].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8df6e323-93c0-410b-b6d1-88de57d5bff5" name="planID">
          <con:configuration>
            <path>dateSpan[1].planID</path>
            <content>PA002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0c4537a6-503a-4345-96ee-f20cfbb5489e" name="startDate">
          <con:configuration>
            <path>dateSpan[1].startDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9350ab02-f8cf-4fa1-aa3f-8ab6b68a66b2" name="endDate">
          <con:configuration>
            <path>dateSpan[1].endDate</path>
            <content>null</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
