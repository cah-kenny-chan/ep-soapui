<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="9e9a50d9-ab23-431d-b6e8-cd44fddec773" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DetermineEdgeparkCompanyLimits" searchProperties="true" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="9e9a50d9-ab23-431d-b6e8-cd44fddec773fileName">DetermineEdgeparkCompanyLimits</con:setting>
  </con:settings>
  <con:testStep type="groovy" name="DetermineEdgeparkCompanyLimits_SingleLineItem" id="0ace9ada-0f65-4730-9196-ee28e8c8d84a">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits_Input.xls"
def outputfile = projectDir + "/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits_SingleLineItem_Output.xls"


//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("SingleLineItem")
Sheet jsonInput = wb.getSheet("JSON-SingleLineItem")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID",sheet1);
addCell(1,0,"limitQuantity",sheet1);
addCell(2,0,"limitDays",sheet1);
addCell(3,0,"limitsValid",sheet1);
addCell(4,0,"PASS/FAIL",sheet1);
addCell(5,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                                                        
                                 //Input for Line Item ID                                                             
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents().toString()                                                                                                                                          
                                                                                     
                                 
                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID from response json  
                        addCell(0,i,json.limitsResponse[0].lineItemID.toString(),sheet1);                                   
                          // get limitQuantity from response json                               
                        addCell(1,i,json.limitsResponse[0].limitQuantity.toString(),sheet1);                                   
                          // get limitDays from response json                                   
                        addCell(2,i,json.limitsResponse[0].limitDays.toString(),sheet1); 
                        // get limitsValid from response json                                   
                        addCell(3,i,json.limitsResponse[0].limitsValid.toString(),sheet1);
                                                                                                   
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values
                          lineItemID = sh.getCell(3,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"limitsResponse[0].lineItemID","lineItemID")

                           limitQuantity = sh.getCell(4,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitQuantity,"limitsResponse[0].limitQuantity","limitQuantity")

                          limitDays = sh.getCell(5,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitDays,"limitsResponse[0].limitDays","limitDays")

                       limitsValid = sh.getCell(6,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitsValid,"limitsResponse[0].limitsValid","limitsValid")
                       
                               //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(4,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(5,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(4,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

           }             
     
catch(Exception e)
{

             log.info(e)                         
}

finally

{
    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="DetermineEdgeparkCompanyLimits_MultiLineItem" id="8b6dde91-02d6-48e1-ab5a-0c903bed4335">
    <con:settings/>
    <con:config>
      <script>import jxl.*;
import jxl.write.*
import java.io.*
import java.io.file.*
import java.util.*
import java.lang.*
import jxl.read.biff.BiffException;
import net.sf.*
import net.sf.json.*
import net.sf.json.groovy.*
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.JsonBuilder
import com.eviware.soapui.model.testsuite.TestStepResult.TestStepStatus
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectDir = groovyUtils.projectPath

def inputfile =  projectDir + "/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits_Input.xls"
def outputfile = projectDir + "/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits_MultiLineItem_Output.xls"


//Creating workbook for reading value from Excel Sheet

Workbook wb = Workbook.getWorkbook(new File(inputfile))
Sheet sh = wb.getSheet("MultiLineItem")
Sheet jsonInput = wb.getSheet("JSON-MultiLineItem")

//reading data from input Excel sheet
rc = sh.getRows();
cc = sh.getColumns();
Cell jreq = jsonInput.getCell(0,0)

//Creating Workbook for writing value in Excel Sheet
WritableWorkbook wb1= Workbook.createWorkbook(new File(outputfile));
WritableSheet sheet1 = wb1.createSheet("ActualResults",0);

//Header declaration for output file
addCell(0,0,"lineItemID1",sheet1);
addCell(1,0,"limitQuantity",sheet1);
addCell(2,0,"limitDays",sheet1);
addCell(3,0,"limitsValid",sheet1);
addCell(4,0,"lineItemID2",sheet1);
addCell(5,0,"limitQuantity",sheet1);
addCell(6,0,"limitDays",sheet1);
addCell(7,0,"limitsValid",sheet1);
addCell(8,0,"PASS/FAIL",sheet1);
addCell(9,0,"FAILED DUE TO",sheet1);
 
//new testStepName
def newTestStep=null

try {

   
               def req = jreq.getContents()
               //Assigning request value dynamically
               //request
               def slurper = new JsonSlurper().parseText(req);
               def requestTemplet = new JsonBuilder(slurper);

         
               for (i=2;i&lt;rc;i++){

                           // Input for TestCaseName
                         Cell varTestCaseName = sh.getCell(0,i)
                        def TestCaseName = varTestCaseName.getContents()

                                                        
                                 //Input for Line Item ID 1                                                            
                                requestTemplet.content.lineItems[0].lineItemID = sh.getCell(1,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[0].hcpcsCode = sh.getCell(2,i).getContents().toString()                                                                                                                                          
                                   //Input for Line Item ID 2                                                            
                                requestTemplet.content.lineItems[1].lineItemID = sh.getCell(3,i).getContents()
                                 //Input for hcpcsCode                                   
                                requestTemplet.content.lineItems[1].hcpcsCode = sh.getCell(4,i).getContents().toString()                                                     
                                 
                              //Assign json request to variable
                       def jsonReqAsString = requestTemplet.toPrettyString()
                       def restRequest = testRunner.testCase.getTestStepByName('JSON Request');
                       restRequest.setPropertyValue('Request',jsonReqAsString);

                                //teststep cloned: Start
                        def getTestCase = testRunner.testCase;
                        def testst = testRunner.testCase.getTestStepByName("JSON Request");                 
                            newTestStep = TestCaseName
                            cleanUp(newTestStep)
                            getTestCase.cloneStep(restRequest,newTestStep)
                             
                         //teststep cloned: End
                         //Executing the testcase
                        testRunner.runTestStepByName(newTestStep)
 
                         //retrive response         
                       def ResponseMessage = testRunner.testCase.testSteps[newTestStep].testRequest.response.contentAsString
                    
                         //new JsonSlurper to parse and get the response in Json format
                        def slurper1 = new JsonSlurper()
                        def json = slurper1.parseText(ResponseMessage)
                    
                                  
                           // get lineItemID 1 from response json  
                        addCell(0,i,json.limitsResponse[0].lineItemID.toString(),sheet1);                                   
                          // get limitQuantity from response json                               
                        addCell(1,i,json.limitsResponse[0].limitQuantity.toString(),sheet1);                                   
                          // get limitDays from response json                                   
                        addCell(2,i,json.limitsResponse[0].limitDays.toString(),sheet1); 
                        // get limitsValid from response json                                   
                        addCell(3,i,json.limitsResponse[0].limitsValid.toString(),sheet1);

                         // get lineItemID 2 from response json  
                        addCell(4,i,json.limitsResponse[1].lineItemID.toString(),sheet1);                                   
                          // get limitQuantity from response json                               
                        addCell(5,i,json.limitsResponse[1].limitQuantity.toString(),sheet1);                                   
                          // get limitDays from response json                                   
                        addCell(6,i,json.limitsResponse[1].limitDays.toString(),sheet1); 
                        // get limitsValid from response json                                   
                        addCell(7,i,json.limitsResponse[1].limitsValid.toString(),sheet1);
                                                           
                      //dynamic asserstion :Start
                   def testStepForAssertion = testRunner.testCase.getTestStepByName(newTestStep);
                                //ValidHTTPStatusCodes 200 Assertion
                  addAssertionValidHTTPStatusCodes(testStepForAssertion,"Valid HTTP Status Codes_"+i)
            
                             //get the expected values for LineItem 1
                          lineItemID = sh.getCell(5,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"limitsResponse[0].lineItemID","lineItemID")

                           limitQuantity = sh.getCell(6,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitQuantity,"limitsResponse[0].limitQuantity","limitQuantity")

                          limitDays = sh.getCell(7,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitDays,"limitsResponse[0].limitDays","limitDays")

                       limitsValid = sh.getCell(8,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitsValid,"limitsResponse[0].limitsValid","limitsValid")

                        //get the expected values for LineItem 2
                          lineItemID = sh.getCell(9,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,lineItemID,"limitsResponse[1].lineItemID","lineItemID")

                           limitQuantity = sh.getCell(10,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitQuantity,"limitsResponse[1].limitQuantity","limitQuantity")

                          limitDays = sh.getCell(11,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitDays,"limitsResponse[1].limitDays","limitDays")

                       limitsValid = sh.getCell(12,i).getContents().toString()
                       addAssertionJsonPathMatch(testStepForAssertion,limitsValid,"limitsResponse[1].limitsValid","limitsValid")
                       
                               //dynamic asserstion :End
                            assertionResult = testStepForAssertion.getAssertionStatus()
             if(assertionResult.toString().equals("FAILED")){

                                       addCell(8,i,"Fail",sheet1);
                                   for( assertion in testStepForAssertion.assertionList ){
                                  for( e in assertion.errors ){

                                                     addCell(9,i,e.message,sheet1);

                                                } 

                                   }

                                }


                                else{

                                   addCell(8,i,"PASS",sheet1);

                                }

 
       }

      wb1.write();
            log.info "TestCase Execution Completed successfull"

 

           }             
     
catch(Exception e)
{

             log.info(e)                         
}

finally

{
    //close workbook
     wb.close();
     wb1.close();     

}

//Method code
def addAssertionJsonPathMatch(RestTestRequestStep testStepForAssertion,String expectedContent,String xPath,String assertionName) {
          def assertionType = testStepForAssertion.addAssertion("JsonPath Match")
                                assertionType.name = assertionName
                                assertionType.setPath(xPath)
                                assertionType.setExpectedContent(expectedContent)
                                assertionType.setAllowWildcards(true) 

}

//Method code
def addAssertionValidHTTPStatusCodes(RestTestRequestStep testStepForAssertion,String assertionName) {

         def StatusCodeAssertionxpath = testStepForAssertion.addAssertion("Valid HTTP Status Codes")
             StatusCodeAssertionxpath.name = assertionName
             StatusCodeAssertionxpath.codes=200

}

//method to delete
def cleanUp(String requestName){

                //remove the teststep::Start
                def testCase = testRunner.testCase
                def testStep = testCase.getTestStepByName(requestName)

                if (testStep!=null){

 
                                    testCase.removeTestStep(testStep)
                }

    
            //remove the teststep::End

}

 

//method to add Cell to sheet1

def addCell(int colmNum,int rowNum,String lblName,WritableSheet sheet1 ){

                 Label header = new Label(colmNum,rowNum,lblName);
                sheet1.addCell(header);               

}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="JSON Request" id="f39be33a-93a4-4628-aabd-f40ebaaae362">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="JSON Request" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001"
        },
        {
            "hcpcsCode": "K0554",
            "lineItemID": "L002"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39482" id="a58fc45c-db00-40fe-96b1-4e461ff4e949">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39482" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A9276",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="95909774-1883-426d-bbdc-a5b315023fd6" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ae6782a3-1e56-4c66-8146-82b837912e64" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a381ee2e-2a25-48e8-98b8-ddc44ceba3d2" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>120</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2cc66b17-47f4-4e82-ad93-031a37b144e2" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="58ffe4d0-e793-4a2c-a04b-b9288c47fa94" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39483" id="6d9f633a-7b40-45bc-8d67-a8e76f009aa7">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39483" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0603",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="7a5f6453-7da5-4a42-9b25-f6d3d791c73c" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="74d31f7e-cd8f-441b-ac62-3ee5deed5cad" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="175063c0-0bc1-4218-a291-ebef94880cab" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0939e27c-8b3d-4d60-9daf-d9784c1c3fb0" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>365</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b2da4f1b-7d3e-4dad-b494-c81650d90282" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39484" id="14b3b600-0921-429d-b422-e62c0d456e31">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39484" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A4253",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="1db38e61-2c10-4ff2-b84e-5c9b1d3e7dbc" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="35bbabef-c98d-4503-bd2a-40d59025ef97" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a793389b-0827-489b-97fa-2f457ee4187c" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>20</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="25e50f7d-f37b-4463-8548-4868a3016824" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="c3902a86-446d-4745-872a-d5dff9e2b47f" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39485" id="73032e1c-32d5-46d2-8105-add264a34f52">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39485" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A4259",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="8f361789-1c4b-4822-a498-1f8c3cbeceac" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="448a5ab1-aff8-4f17-94a5-96fe022335ea" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="5718b1e7-e5e4-48c1-979f-00543162617d" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>10</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2fb9e40e-8abf-4c71-8a60-1b31057011ae" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="dfad8b4b-916f-4760-a471-c821648afad8" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39486" id="4d418ad3-d745-4e9c-b84b-e664eaea7ac6">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39486" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="0005d7c4-73a3-4235-94a0-81e3eb640cf8" name="Valid HTTP Status Codes_6">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="066c36cb-700d-489d-b328-11dc6601734c" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="33459eaa-eb9c-49d4-b0b3-af4c0cf25176" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3eac7096-587e-43fe-99ab-c5fe7e5b35f5" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="2a629547-038c-48cb-9f6b-6410688afe51" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39487" id="266c5884-5bbd-4e5a-92df-aed71add18d5">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39487" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "K0553",
            "lineItemID": "L001"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="9763bd09-84ea-4164-9d57-cb8195ec0fec" name="Valid HTTP Status Codes_7">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="50cf20c8-6cf9-45cc-a654-06fa792bd3f1" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3d2302ba-38f4-4e46-a4ae-bc5a8cbb1830" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="3432ed42-42a4-47b9-b580-4f32f0952531" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="09a43b62-578e-44f6-925b-1f1f3ad3213e" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39488" id="4a9c5168-4a09-4b34-8be2-75f899952999">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39488" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A9276",
            "lineItemID": "L001"
        },
        {
            "hcpcsCode": "A4253",
            "lineItemID": "L002"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="09739880-2ea9-4529-b322-950a17e808e6" name="Valid HTTP Status Codes_2">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a5c81d4f-e1a6-4d43-983a-fdb8fb079a76" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="f0a92349-cd55-4a24-9448-f068343c0d4c" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>120</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="96154696-a36e-4790-981e-1ffbbb2ee339" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="492da463-d66c-4176-8d9a-7086579a01cb" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9c3173d4-4916-4ff2-a19d-f8fc88721130" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="4a385322-1097-4156-8ff5-10467e6e96a1" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[1].limitQuantity</path>
            <content>20</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0d1330d1-0481-403c-a07b-e87e8c6e0a63" name="limitDays">
          <con:configuration>
            <path>limitsResponse[1].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fc39950b-d275-4abb-8c4b-07ab173fc8d6" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[1].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39489" id="44245c55-f212-471f-9e9b-a032f62dec45">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39489" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "E0603",
            "lineItemID": "L001"
        },
        {
            "hcpcsCode": "A4259",
            "lineItemID": "L002"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="bd5dec5b-66e5-44f5-82bd-ad5dabf400e2" name="Valid HTTP Status Codes_3">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d662abde-6b78-4aaa-8ef5-3d93787a652b" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="b4582d05-62d9-4fa7-be84-073d2e47417f" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>1</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="aa2de558-980f-4b78-bf9c-059c135a00fe" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>365</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="8e391718-f287-4668-b909-aefe13ce5291" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ea8242da-63e3-41c9-81b7-355a43dcb07c" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="a64f9ca6-6e77-4e06-8b9c-3a38b7b06968" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[1].limitQuantity</path>
            <content>10</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="bd5d229b-0a3f-4031-80a7-8f57c3b4e2ae" name="limitDays">
          <con:configuration>
            <path>limitsResponse[1].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="ae958508-d4c8-4544-9da6-3d5231a93b90" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[1].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39490" id="7029f1dc-3edc-4945-9416-7008e9b47f89">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39490" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "A9276",
            "lineItemID": "L001"
        },
        {
            "hcpcsCode": "",
            "lineItemID": "L002"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="8b32fdd3-a6f6-40ae-aed1-619beb8f11d0" name="Valid HTTP Status Codes_4">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="22f5472f-89ce-4c3c-87d0-3bdc6e64307f" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="d458bc81-d812-46da-90c5-7420405d3f98" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>120</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="977e62ab-e8ad-4735-a0ee-98c57f3d1a01" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>90</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="708a9906-06c5-4817-8c35-ca59c309541d" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="757173e4-adfa-4c36-ac05-0528a564d39e" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0ec8fc3a-883c-462a-8fbd-4f7bb9c7fbb3" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[1].limitQuantity</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1291b3c0-d8d0-4f2a-931e-fc1e5c3c33df" name="limitDays">
          <con:configuration>
            <path>limitsResponse[1].limitDays</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="0c22a6cd-0bce-4a57-8d70-f837a26dfe3e" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[1].limitsValid</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="EPST-39491" id="a217fdbe-d8af-422b-9c1c-d5d622517fbb">
    <con:settings/>
    <con:config service="CARESOrderManagement" resourcePath="/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL" methodName="DetermineEdgeparkCompanyLimits" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="EPST-39491" id="8e1823b7-0b90-4a25-9b4a-56b1fb7cceef" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>http://lqec5009c1ods01:9080</con:endpoint>
        <con:request>{
    "e2eMetadata": {
        "serviceAddressing": {
            "callingFunction": "string",
            "correlationID": "string",
            "from": "string",
            "timestamp": "2019-08-26T00:00:00.000+0000"
        }
    },
    "lineItems": [
        {
            "hcpcsCode": "",
            "lineItemID": "L001"
        },
        {
            "hcpcsCode": "K0554",
            "lineItemID": "L002"
        }
    ]
}</con:request>
        <con:originalUri>http://ldec5009c1ods02/DecisionService/rest/v1/DetermineEdgeparkCompanyLimits/DetermineEdgeparkCompanyLimits/WADL</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="714bf032-440c-4ab7-a615-89f73a8031c1" name="Valid HTTP Status Codes_5">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="9f74505c-3aa4-4159-aeee-25250c5c01e2" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[0].lineItemID</path>
            <content>L001</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="565b6b0a-bc31-4a92-8b68-14ad95c20484" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[0].limitQuantity</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="14d7fc80-c5b8-463c-b260-b7ddb7445292" name="limitDays">
          <con:configuration>
            <path>limitsResponse[0].limitDays</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="30903c6c-4ea1-468a-b2b4-cf347744899d" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[0].limitsValid</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="1cd45adc-083a-4328-b73a-4258169e4cd9" name="lineItemID">
          <con:configuration>
            <path>limitsResponse[1].lineItemID</path>
            <content>L002</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="03014138-9c7b-457e-83c3-006a33fdc029" name="limitQuantity">
          <con:configuration>
            <path>limitsResponse[1].limitQuantity</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="fc6f7c72-3538-4a6b-b783-65821e7c17f1" name="limitDays">
          <con:configuration>
            <path>limitsResponse[1].limitDays</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="JsonPath Match" id="54bea4d1-181a-4541-8036-77baeb5d534c" name="limitsValid">
          <con:configuration>
            <path>limitsResponse[1].limitsValid</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
</con:testCase>
